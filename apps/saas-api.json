{
  "openapi": "3.0.0",
  "paths": {
    "/saas-api/public-api/locations": {
      "get": {
        "operationId": "locations",
        "summary": "Get locations by stripeId with companyId",
        "description": "Get locations by stripeCustomerId or stripeSubscriptionId with companyId",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "customerId",
            "required": false,
            "in": "query",
            "description": "Stripe customer ID to find locations for",
            "example": "cus_OD2oBjRfKEF6FV",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": false,
            "in": "query",
            "description": "Stripe subscription ID to find locations for",
            "example": "sub_1NVqlLByVlfITvRXgirIdpyc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "description": "Company ID to filter locations",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/update-saas-subscription/{locationId}": {
      "put": {
        "operationId": "generate-payment-link",
        "summary": "Update SaaS subscription",
        "description": "Update SaaS subscription for given locationId and customerId",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "description": "Location ID to update subscription for",
            "example": "AUKAtFVo0lWezBsBQ3FE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SaaS subscription updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/bulk-disable-saas/{companyId}": {
      "post": {
        "operationId": "bulk-disable-saas",
        "summary": "Disable SaaS for locations",
        "description": "Disable SaaS for locations for given locationIds",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "Company ID to disable SaaS for",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDisableSaasDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SaaS disabled successfully for locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDisableSaasResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/enable-saas/{locationId}": {
      "post": {
        "operationId": "enable-saas-location",
        "summary": "Enable SaaS for Sub-Account (Formerly Location)",
        "description": "<div>\n                  <p>Enable SaaS for Sub-Account (Formerly Location) based on the data provided</p>\n                  <div>\n                    <span style= \"display: inline-block;\n                                width: 25px; height: 25px;\n                                background-color: yellow;\n                                color: black;\n                                font-weight: bold;\n                                font-size: 24px;\n                                text-align: center;\n                                line-height: 22px;\n                                border: 2px solid black;\n                                border-radius: 10%;\n                                margin-right: 10px;\">\n                                !\n                      </span>\n                      <span>\n                        <strong>\n                          This feature is only available on Agency Pro ($497) plan.\n                        </strong>\n                      </span>\n                  </div>\n                </div>\n    ",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "description": "Location ID to enable SaaS for",
            "example": "AUKAtFVo0lWezBsBQ3FE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableSaasDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SaaS enabled successfully for location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableSaasResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/pause/{locationId}": {
      "post": {
        "operationId": "pause-location",
        "summary": "Pause location",
        "description": "Pause Sub account for given locationId",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "description": "Location ID to pause/unpause",
            "example": "AUKAtFVo0lWezBsBQ3FE",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseLocationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location paused/unpaused successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/update-rebilling/{companyId}": {
      "post": {
        "operationId": "update-rebilling",
        "summary": "Update Rebilling",
        "description": "Bulk update rebilling for given locationIds",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "Company ID to update rebilling for",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRebillingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rebilling updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRebillingResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Saas"
        ],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/agency-plans/{companyId}": {
      "get": {
        "operationId": "get-agency-plans",
        "summary": "Get Agency Plans",
        "description": "Fetch all agency subscription plans for a given company ID",
        "deprecated": true,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "Company ID to get agency plans for",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agency plans retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgencyPlanResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/get-saas-subscription/{locationId}": {
      "get": {
        "operationId": "get-location-subscription",
        "summary": "Get Location Subscription Details",
        "description": "Fetch subscription details for a specific location from location metadata",
        "deprecated": true,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "description": "Location ID to get subscription details for",
            "example": "AUKAtFVo0lWezBsBQ3FE",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "description": "Company ID to filter subscription details",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location subscription details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationSubscriptionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/bulk-enable-saas/{companyId}": {
      "post": {
        "operationId": "bulk-enable-saas",
        "summary": "Bulk Enable SaaS",
        "description": "Enable SaaS mode for multiple locations with support for both SaaS v1 and v2",
        "deprecated": true,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "Company ID to enable SaaS for",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEnableSaasRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk SaaS enable operation completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkEnableSaasResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/saas-locations/{companyId}": {
      "get": {
        "operationId": "get-saas-locations",
        "summary": "Get SaaS Locations",
        "description": "Fetch all SaaS-activated locations for a company with pagination",
        "deprecated": true,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "Company ID to get SaaS locations for",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SaaS locations retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSaasLocationsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas-api/public-api/saas-plan/{planId}": {
      "get": {
        "operationId": "get-saas-plan",
        "summary": "Get SaaS Plan",
        "description": "Fetch a specific SaaS plan by plan ID",
        "deprecated": true,
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "description": "Plan ID to get SaaS plan details for",
            "example": "66c4d36534f21f900dc2a265",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "description": "Company ID to filter SaaS plan",
            "example": "5DP4iH6HLkQsiKESj6rh",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SaaS plan retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaasPlanResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorDTO"
                }
              }
            }
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/locations": {
      "get": {
        "operationId": "locations",
        "summary": "Get locations by stripeId with companyId",
        "description": "Get locations by stripeCustomerId or stripeSubscriptionId with companyId",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "customerId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/update-saas-subscription/{locationId}": {
      "put": {
        "operationId": "generate-payment-link",
        "summary": "Update SaaS subscription",
        "description": "Update SaaS subscription for given locationId and customerId",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/bulk-disable-saas/{companyId}": {
      "post": {
        "operationId": "bulk-disable-saas",
        "summary": "Disable SaaS for locations",
        "description": "Disable SaaS for locations for given locationIds",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDisableSaasDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/enable-saas/{locationId}": {
      "post": {
        "operationId": "enable-saas-location",
        "summary": "Enable SaaS for Sub-Account (Formerly Location)",
        "description": "<div>\n                  <p>Enable SaaS for Sub-Account (Formerly Location) based on the data provided</p>\n                  <div>\n                    <span style= \"display: inline-block;\n                                width: 25px; height: 25px;\n                                background-color: yellow;\n                                color: black;\n                                font-weight: bold;\n                                font-size: 24px;\n                                text-align: center;\n                                line-height: 22px;\n                                border: 2px solid black;\n                                border-radius: 10%;\n                                margin-right: 10px;\">\n                                !\n                      </span>\n                      <span>\n                        <strong>\n                          This feature is only available on Agency Pro ($497) plan.\n                        </strong>\n                      </span>\n                  </div>\n                </div>\n    ",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableSaasDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/pause/{locationId}": {
      "post": {
        "operationId": "pause-location",
        "summary": "Pause location",
        "description": "Pause Sub account for given locationId",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseLocationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/update-rebilling/{companyId}": {
      "post": {
        "operationId": "update-rebilling",
        "summary": "Update Rebilling",
        "description": "Bulk update rebilling for given locationIds",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRebillingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/agency-plans/{companyId}": {
      "get": {
        "operationId": "get-agency-plans",
        "summary": "Get Agency Plans",
        "description": "Fetch all agency subscription plans for a given company ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/get-saas-subscription/{locationId}": {
      "get": {
        "operationId": "get-location-subscription",
        "summary": "Get Location Subscription Details",
        "description": "Fetch subscription details for a specific location from location metadata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/bulk-enable-saas/{companyId}": {
      "post": {
        "operationId": "bulk-enable-saas",
        "summary": "Bulk Enable SaaS",
        "description": "Enable SaaS mode for multiple locations with support for both SaaS v1 and v2",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEnableSaasRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/saas-locations/{companyId}": {
      "get": {
        "operationId": "get-saas-locations",
        "summary": "Get SaaS Locations",
        "description": "Fetch all SaaS-activated locations for a company with pagination",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    },
    "/saas/saas-plan/{planId}": {
      "get": {
        "operationId": "get-saas-plan",
        "summary": "Get SaaS Plan",
        "description": "Fetch a specific SaaS plan by plan ID",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["2021-04-15"]
            }
          },
          {
            "name": "planId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": ["Saas"],
        "security": [
          {
            "Agency-Access": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "SaaS API",
    "description": "API Service for SaaS",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Saas",
      "description": "API Service for SaaS"
    }
  ],
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "token-id",
        "in": "header",
        "description": "Use the Access Token generated by exchanging API Key for token id",
        "type": "http"
      },
      "Location-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Location",
        "type": "http"
      },
      "Agency-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Company",
        "type": "http"
      }
    },
    "schemas": {
      "BadRequestDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": "Bad Request",
            "description": "Error message"
          }
        }
      },
      "UnauthorizedDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": "Invalid token: access token is invalid",
            "description": "Error message"
          },
          "error": {
            "type": "string",
            "example": "Unauthorized",
            "description": "Error message"
          }
        }
      },
      "ResourceNotFoundDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 404,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": [
              "Contact not found",
              "User not found",
              "Group not found",
              "Channel not found"
            ],
            "description": "Error message"
          }
        }
      },
      "InternalServerErrorDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 500,
            "description": "Status code"
          },
          "message": {
            "type": "string",
            "example": "Internal Server Error",
            "description": "Error message"
          }
        }
      },
      "UpdateSubscriptionDto": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "sub_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "cus_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "example": "companyId1"
          }
        },
        "required": ["subscriptionId", "customerId", "companyId"]
      },
      "BulkDisableSaasDto": {
        "type": "object",
        "properties": {
          "locationIds": {
            "description": "Location IDs",
            "example": ["locationId1", "locationId2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["locationIds"]
      },
      "BulkDisableSaasResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Response data from the bulk disable SaaS operation",
            "example": {
              "msg": "success"
            }
          }
        },
        "required": ["data"]
      },
      "EnableSaasDto": {
        "type": "object",
        "properties": {
          "stripeAccountId": {
            "type": "string",
            "description": "Stripe account id(Required only for SaaS V1)",
            "example": "acct_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "name": {
            "type": "string",
            "description": "Name of the stripe customer(Required only for SaaS V1)",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of the stripe customer(Required only for SaaS V1)",
            "example": "john.doe@example.com"
          },
          "stripeCustomerId": {
            "type": "string",
            "description": "Stripe customer id if exists(Required only for SaaS V1)",
            "example": "cus_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "companyId": {
            "type": "string"
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Denotes if it is a saas v2 or v1 sub-account",
            "example": true
          },
          "contactId": {
            "type": "string",
            "description": "Agency subaccount used for payment provider integration(Required Only for SaaS V2)",
            "example": "1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "providerLocationId": {
            "type": "string",
            "description": "Agency Subaccount ID",
            "example": "r06mdj4OrrERzYDvsOdh"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Description"
          },
          "saasPlanId": {
            "type": "string",
            "description": "Required only while pre-configuring saas subscription",
            "example": "1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "priceId": {
            "type": "string",
            "description": "Required only while pre-configuring saas subscription",
            "example": "price_1QDPY5FpU9DlKp7RQ8BXfywx"
          }
        },
        "required": ["companyId", "isSaaSV2"]
      },
      "EnableSaasResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Response data from the enable SaaS operation",
            "example": {
              "customer_id": "cus_1QDPY5FpU9DlKp7RQ8BXfywx",
              "ok": true,
              "paymentMethodAdded": true
            }
          }
        },
        "required": ["data"]
      },
      "PauseLocationDto": {
        "type": "object",
        "properties": {
          "paused": {
            "type": "boolean",
            "description": "Paused",
            "example": true
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "example": "companyId1"
          }
        },
        "required": ["paused", "companyId"]
      },
      "UpdateRebillingDto": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "description": "The product to update rebilling for",
            "example": "contentAI",
            "enum": [
              "contentAI",
              "workflow_premium_actions",
              "workflow_ai",
              "conversationAI",
              "EmailNotification",
              "whatsApp",
              "reviewsAI",
              "VERIFIED_CALLER_ID",
              "WALLET_SALES_TAX",
              "NOTIFICATION_SMS",
              "EmailSmtp",
              "EmailVerification",
              "autoCompleteAddress",
              "funnelAI",
              "domainPurchase",
              "Phone",
              "Email"
            ]
          },
          "locationIds": {
            "description": "Array of location IDs to update rebilling for",
            "example": ["zzyG7A4x6bRJl5SlhQhH", "Vygq7VgXCDfg3xnl8TBR"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object",
            "description": "Configuration for rebilling settings",
            "properties": {
              "optIn": {
                "type": "boolean",
                "description": "Enable the product for the locations",
                "example": true
              },
              "enabled": {
                "type": "boolean",
                "description": "Enable the rebilling for the locations",
                "example": true
              },
              "markup": {
                "type": "number",
                "description": "Additional value to be added in terms of percentage. For example, if the product price is $100 and the markup is 5, the amount charged to will be $105.",
                "example": 5
              }
            }
          }
        },
        "required": ["product", "locationIds", "config"]
      },
      "UpdateRebillingResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the rebilling update was successful",
            "example": true
          }
        },
        "required": ["success"]
      },
      "AgencyPlanResponseDto": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "description": "Unique identifier for the plan",
            "example": "66c4d36534f21f900dc2a265"
          },
          "title": {
            "type": "string",
            "description": "Title of the plan",
            "example": "AED 1.5 changed"
          },
          "description": {
            "type": "string",
            "description": "Description of the plan",
            "example": "AED 1.5"
          },
          "saasProducts": {
            "description": "Array of SaaS products included in the plan",
            "example": [
              "2-way-text-messaging",
              "gmb-messaging",
              "web-chat",
              "reputation-management"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addOns": {
            "description": "Array of add-ons included in the plan",
            "example": [
              "CONVERSATIONS_AI",
              "CP_BRANDED_APP_49",
              "WORDPRESS_V1"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planLevel": {
            "type": "number",
            "description": "Level of the plan (0-4)",
            "example": 0
          },
          "trialPeriod": {
            "type": "number",
            "description": "Trial period in days",
            "example": 16
          },
          "userLimit": {
            "type": "number",
            "description": "User limit for the plan",
            "example": 50
          },
          "contactLimit": {
            "type": "number",
            "description": "Contact limit for the plan",
            "example": 50
          },
          "prices": {
            "type": "array",
            "description": "Pricing information for the plan",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the price",
                  "type": "string",
                  "example": "66a9edbfcc6c505a22db7976"
                },
                "billingInterval": {
                  "description": "Billing interval for the plan",
                  "type": "string",
                  "enum": ["month", "year"],
                  "example": "month"
                },
                "active": {
                  "description": "Indicates if the price is active",
                  "type": "boolean",
                  "example": true
                },
                "amount": {
                  "description": "Amount of the price",
                  "type": "number",
                  "example": 150
                },
                "currency": {
                  "description": "Currency of the price",
                  "type": "string",
                  "example": "AED"
                },
                "symbol": {
                  "description": "Symbol of the price",
                  "type": "string",
                  "example": "$"
                }
              }
            }
          },
          "categoryId": {
            "type": "string",
            "description": "Category ID for the plan",
            "example": "66911cdc98508ec2731979b9"
          },
          "snapshotId": {
            "type": "string",
            "description": "Snapshot ID for the plan",
            "example": "G8KmpIeLnZc7ZMoJoxDx"
          },
          "productId": {
            "type": "string",
            "description": "Product ID for the plan",
            "example": "66a9edbfcc6c5090bedb7974"
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Indicates if this is a SaaS V2 plan",
            "example": true
          },
          "providerLocationId": {
            "type": "string",
            "description": "Provider location ID",
            "example": "r06mdj4OrrERzYDvsOdh"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "example": "2024-07-31T07:54:41.885Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-04-01T12:27:29.167Z"
          }
        },
        "required": [
          "planId",
          "title",
          "description",
          "saasProducts",
          "planLevel",
          "trialPeriod",
          "prices",
          "isSaaSV2",
          "createdAt",
          "updatedAt"
        ]
      },
      "LocationSubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "Location ID",
            "example": "locationId1"
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Indicates if the SaaS is V2",
            "example": true
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "example": "companyId1"
          },
          "saasMode": {
            "type": "string",
            "description": "SaaS mode",
            "example": "saasV2"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "subscriptionId1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "customerId1"
          },
          "productId": {
            "type": "string",
            "description": "Product ID",
            "example": "productId1"
          },
          "priceId": {
            "type": "string",
            "description": "Price ID",
            "example": "priceId1"
          },
          "saasPlanId": {
            "type": "string",
            "description": "SaaS plan ID",
            "example": "saasPlanId1"
          },
          "subscriptionStatus": {
            "type": "string",
            "description": "Subscription status",
            "example": "active"
          }
        },
        "required": ["locationId", "isSaaSV2", "companyId"]
      },
      "BulkEnableSaasActionPayloadDto": {
        "type": "object",
        "properties": {
          "priceId": {
            "type": "string",
            "description": "Price ID for the SaaS plan",
            "example": "price_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "stripeAccountId": {
            "type": "string",
            "description": "Stripe account ID",
            "example": "acct_1QDPY5FpU9DlKp7RQ8BXfywx"
          },
          "saasPlanId": {
            "type": "string",
            "description": "SaaS plan ID",
            "example": "66c4d36534f21f900dc2a265"
          },
          "providerLocationId": {
            "type": "string",
            "description": "Provider location ID",
            "example": "r06mdj4OrrERzYDvsOdh"
          }
        },
        "required": ["saasPlanId"]
      },
      "BulkEnableSaasRequestDto": {
        "type": "object",
        "properties": {
          "locationIds": {
            "description": "Array of location IDs to enable SaaS for",
            "example": ["locationId1", "locationId2"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Indicates if the SaaS is V2",
            "example": true
          },
          "actionPayload": {
            "description": "Action payload for the bulk enable SaaS operation",
            "allOf": [
              {
                "$ref": "#/components/schemas/BulkEnableSaasActionPayloadDto"
              }
            ]
          }
        },
        "required": ["locationIds", "isSaaSV2", "actionPayload"]
      },
      "BulkEnableSaasResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the bulk enable SaaS operation was successful",
            "example": true
          },
          "message": {
            "type": "string",
            "description": "Message indicating the bulk enable SaaS operation",
            "example": "Bulk enable SaaS operation completed successfully"
          },
          "bulkActionUrl": {
            "type": "string",
            "description": "URL for the bulk enable SaaS operation",
            "example": "https://example.com/bulk-enable-saas"
          }
        },
        "required": ["success", "message"]
      },
      "SaasLocationDto": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "Location ID",
            "example": "locationId1"
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "example": "companyId1"
          },
          "saasMode": {
            "type": "string",
            "description": "SaaS mode",
            "example": "saasV2"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Subscription ID",
            "example": "subscriptionId1"
          },
          "customerId": {
            "type": "string",
            "description": "Customer ID",
            "example": "customerId1"
          },
          "name": {
            "type": "string",
            "description": "Name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email",
            "example": "john.doe@example.com"
          },
          "providerLocationId": {
            "type": "string",
            "description": "Provider location ID",
            "example": "r06mdj4OrrERzYDvsOdh"
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Indicates if the SaaS is V2",
            "example": true
          },
          "subscriptionInfo": {
            "type": "object",
            "description": "Subscription information",
            "example": {
              "priceId": "price_1QDPY5FpU9DlKp7RQ8BXfywx",
              "saasPlanId": "66c4d36534f21f900dc2a265",
              "stripeProductId": "prod_1QDPY5FpU9DlKp7RQ8BXfywx",
              "subscriptionStatus": "active"
            }
          }
        },
        "required": ["locationId", "companyId", "saasMode", "subscriptionId"]
      },
      "GetSaasLocationsResponseDto": {
        "type": "object",
        "properties": {
          "locations": {
            "description": "Array of SaaS locations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaasLocationDto"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "example": 1,
                "description": "Page number"
              },
              "limit": {
                "type": "number",
                "example": 10,
                "description": "Number of items per page"
              },
              "total": {
                "type": "number",
                "example": 100,
                "description": "Total number of items"
              },
              "totalPages": {
                "type": "number",
                "example": 10,
                "description": "Total number of pages"
              },
              "hasNext": {
                "type": "boolean",
                "example": true,
                "description": "Indicates if there is a next page"
              },
              "hasPrev": {
                "type": "boolean",
                "example": true,
                "description": "Indicates if there is a previous page"
              }
            }
          }
        },
        "required": ["locations", "pagination"]
      },
      "SaasPlanResponseDto": {
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "description": "Unique identifier for the SaaS plan",
            "example": "66c4d36534f21f900dc2a265"
          },
          "companyId": {
            "type": "string",
            "description": "Company ID associated with the SaaS plan",
            "example": "66c4d36534f21f900dc2a265"
          },
          "title": {
            "type": "string",
            "description": "Title of the SaaS plan",
            "example": "AED 1.5 changed"
          },
          "description": {
            "type": "string",
            "description": "Description of the SaaS plan",
            "example": "AED 1.5"
          },
          "saasProducts": {
            "description": "Array of SaaS products included in the plan",
            "example": ["2-way-text-messaging", "gmb-messaging", "web-chat"],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addOns": {
            "description": "Array of add-ons included in the plan",
            "example": [
              "YEXT_V2",
              "WHATSAPP_V1",
              "WORDPRESS_V1",
              "AI_EMPLOYEE",
              "Ad_Publishing_Connect_Your_BM"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "planLevel": {
            "type": "number",
            "description": "Level of the plan (0-4)",
            "example": 0
          },
          "trialPeriod": {
            "type": "number",
            "description": "Trial period in days",
            "example": 16
          },
          "setupFee": {
            "type": "number",
            "description": "Setup fee for the plan",
            "example": 100
          },
          "userLimit": {
            "type": "number",
            "description": "User limit for the plan",
            "example": 50
          },
          "contactLimit": {
            "type": "number",
            "description": "Contact limit for the plan",
            "example": 50
          },
          "prices": {
            "type": "array",
            "description": "Prices for the plan",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "66a9edbfcc6c505a22db7976"
                },
                "billingInterval": {
                  "type": "string",
                  "enum": ["month", "year"],
                  "example": "month"
                },
                "active": {
                  "type": "boolean",
                  "example": true
                },
                "amount": {
                  "type": "number",
                  "example": 150
                },
                "currency": {
                  "type": "string",
                  "example": "AED"
                },
                "symbol": {
                  "type": "string",
                  "example": "$"
                }
              }
            }
          },
          "categoryId": {
            "type": "string",
            "description": "Category ID for the plan",
            "example": "66911cdc98508ec2731979b9"
          },
          "snapshotId": {
            "type": "string",
            "description": "Snapshot ID for the plan",
            "example": "G8KmpIeLnZc7ZMoJoxDx"
          },
          "providerLocationId": {
            "type": "string",
            "description": "Provider location ID",
            "example": "r06mdj4OrrERzYDvsOdh"
          },
          "productId": {
            "type": "string",
            "description": "Product ID for the plan",
            "example": "66a9edbfcc6c5090bedb7974"
          },
          "isSaaSV2": {
            "type": "boolean",
            "description": "Indicates if this is a SaaS V2 plan",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2024-07-31T07:54:41.885Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-04-01T12:27:29.167Z"
          }
        },
        "required": [
          "planId",
          "companyId",
          "title",
          "description",
          "saasProducts",
          "planLevel",
          "trialPeriod",
          "prices",
          "isSaaSV2",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  },
  "x-tagGroups": {
    "name": "Saas",
    "tags": [
      "Saas"
    ]
  }
}
