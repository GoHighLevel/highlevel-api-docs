{
  "openapi": "3.0.0",
  "paths": {
    "/marketplace/billing/charges": {
      "post": {
        "operationId": "charge",
        "summary": "Create a new wallet charge",
        "description": "Create a new wallet charge",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RaiseChargeBodyDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Charge created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "chargeId": {
                      "type": "string",
                      "example": "charge_123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Wallet Charges"
        ],
        "security": [
          {
            "Location-Access-Only": [
              "charges.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "getCharges",
        "summary": "Get all wallet charges",
        "description": "Get all wallet charges",
        "parameters": [
          {
            "name": "meterId",
            "required": false,
            "in": "query",
            "description": "Billing Meter ID (you can find this on your app's pricing page on the developer portal)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventId",
            "required": false,
            "in": "query",
            "description": "Event ID / Transaction ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "Filter results by User ID that your server passed via API when the charge was created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Filter results AFTER a specific date. Use this in combination with endDate to filter results in a specific time window.",
            "schema": {
              "example": "2025-03-26",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Filter results BEFORE a specific date. Use this in combination with startDate to filter results in a specific time window.",
            "schema": {
              "example": "2025-03-26",
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of records to return",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of wallet charges",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "charges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "refunded": {
                            "type": "boolean",
                            "description": "Value is 'true' if the charge has subsequently been refunded."
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the transaction. We currently support USD only."
                          },
                          "appId": {
                            "type": "string",
                            "description": "App ID"
                          },
                          "meterId": {
                            "type": "string",
                            "description": "Billing Meter ID (you can find this on your app's pricing page)"
                          },
                          "chargeId": {
                            "type": "string",
                            "description": "Charge ID"
                          },
                          "entityType": {
                            "type": "string",
                            "description": "Indicates who was charged? Currently, we support charges for 'location' only"
                          },
                          "entityId": {
                            "type": "string",
                            "description": "If the entityType is Location, entityld would be locationld."
                          },
                          "amountCharged": {
                            "type": "number",
                            "description": "Total amount charged"
                          },
                          "pricePerUnit": {
                            "type": "number",
                            "description": "Price per unit for the charge"
                          },
                          "transactionType": {
                            "type": "string",
                            "description": "This can be one of two values - 'charge' or 'refund'"
                          },
                          "units": {
                            "type": "number",
                            "description": "Number of units that the sub-account was charged for"
                          },
                          "meta": {
                            "type": "object",
                            "description": "meta object contains details that were sent while creating the charge via the API - eventID, description, eventTime, userld"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the charge was created in our system"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the charge was last updated in our system"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Wallet Charges"
        ],
        "security": [
          {
            "Location-Access-Only": [
              "charges.readonly"
            ]
          }
        ]
      }
    },
    "/marketplace/billing/charges/{chargeId}": {
      "delete": {
        "operationId": "deleteCharge",
        "summary": "Delete a wallet charge",
        "description": "Delete a wallet charge",
        "parameters": [
          {
            "name": "chargeId",
            "required": true,
            "in": "path",
            "description": "ID of the charge to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Charge deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Charge not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Charge not found"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Wallet Charges"
        ],
        "security": [
          {
            "Location-Access-Only": [
              "charges.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "getSpecificCharge",
        "summary": "Get specific wallet charge details",
        "description": "Get specific wallet charge details",
        "parameters": [
          {
            "name": "chargeId",
            "required": true,
            "in": "path",
            "description": "ID of the charge to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns charge details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refunded": {
                      "type": "boolean",
                      "description": "Value is 'true' if the charge has subsequently been refunded."
                    },
                    "currency": {
                      "type": "string",
                      "description": "Currency of the transaction. We currently support USD only."
                    },
                    "appId": {
                      "type": "string",
                      "description": "App ID"
                    },
                    "meterId": {
                      "type": "string",
                      "description": "Billing Meter ID (you can find this on your app's pricing page)"
                    },
                    "chargeId": {
                      "type": "string",
                      "description": "Charge ID"
                    },
                    "entityType": {
                      "type": "string",
                      "description": "Indicates who was charged? Currently, we support charges for 'location' only"
                    },
                    "entityId": {
                      "type": "string",
                      "description": "If the entityType is Location, entityld would be locationld."
                    },
                    "amountCharged": {
                      "type": "number",
                      "description": "Total amount charged"
                    },
                    "pricePerUnit": {
                      "type": "number",
                      "description": "Price per unit for the charge"
                    },
                    "transactionType": {
                      "type": "string",
                      "description": "This can be one of two values - 'charge' or 'refund'"
                    },
                    "units": {
                      "type": "number",
                      "description": "Number of units that the sub-account was charged for"
                    },
                    "meta": {
                      "type": "object",
                      "description": "meta object contains details that were sent while creating the charge via the API - eventID, description, eventTime, userld"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the charge was created in our system"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the charge was last updated in our system"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Charge not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Charge not found"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Wallet Charges"
        ],
        "security": [
          {
            "Location-Access-Only": [
              "charges.readonly"
            ]
          }
        ]
      }
    },
    "/marketplace/billing/charges/has-funds": {
      "get": {
        "operationId": "hasFunds",
        "summary": "Check if account has sufficient funds",
        "description": "Check if account has sufficient funds",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns fund availability status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasFunds": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Wallet Charges"
        ],
        "security": [
          {
            "Location-Access-Only": [
              "charges.readonly"
            ]
          }
        ]
      }
    },
    "/marketplace/app/{appId}/installations": {
      "delete": {
        "operationId": "uninstall-application",
        "summary": "Uninstall an application",
        "description": "Uninstalls an application from your company or a specific location. This will remove the application`s access and stop all its functionalities",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "description": "The application id which is to be uninstalled.",
            "schema": {
              "example": "674587703dfd4161f1e3c557",
              "type": "string"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteIntegrationBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully uninstalled the application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteIntegrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Location-Access-Only": []
          },
          {
            "Agency-Access": []
          }
        ],
        "tags": [
          "App Management"
        ]
      },
      "get": {
        "operationId": "get-installer-details",
        "summary": "Get Installer Details",
        "description": "Fetches installer details for the authenticated user. This endpoint returns information about the company, location, user, and installation details associated with the current OAuth token.",
        "parameters": [
          {
            "name": "appId",
            "required": true,
            "in": "path",
            "description": "ID of the app to get installer details",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved installer details. Returns company, location, user, and installation information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstallerDetailsResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request parameters or missing required data."
          },
          "403": {
            "description": "Forbidden. The client does not have necessary permissions to access installer details."
          }
        },
        "tags": [
          "App Management"
        ]
      }
    }
  },
  "info": {
    "title": "Developer marketplace API",
    "description": "Documentation for Marketplace API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Marketplace",
      "description": "Documentation for Marketplace API"
    },
    {
      "name": "App Management",
      "description": "Documentation for Marketplace API"
    },
    {
      "name": "Wallet Charges",
      "description": "Documentation for Marketplace API"
    }
  ],
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account.",
        "type": "http"
      },
      "Agency-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency (OR) Private Integration Token of Agency.",
        "type": "http"
      },
      "Agency-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency.",
        "type": "http"
      }
    },
    "schemas": {
      "RaiseChargeBodyDTO": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "App ID of the App"
          },
          "meterId": {
            "type": "string",
            "description": "Billing Meter ID (you can find this on your app's pricing page)"
          },
          "eventId": {
            "type": "string",
            "description": "Event ID / Transaction ID on your server's side. This will help you maintain the reference of the event/transaction on your end that you charged the customer for."
          },
          "userId": {
            "type": "string",
            "description": "User ID"
          },
          "locationId": {
            "type": "string",
            "description": "ID of the Sub-Account to be charged"
          },
          "companyId": {
            "type": "string",
            "description": "ID of the Agency the Sub-account belongs to"
          },
          "description": {
            "type": "string",
            "description": "Description of the charge"
          },
          "price": {
            "type": "number",
            "description": "Price per unit to charge"
          },
          "units": {
            "type": "string",
            "description": "Number of units to charge"
          },
          "eventTime": {
            "type": "string",
            "description": "The timestamp when the event/transaction was performed. If blank, the billing timestamp will be set as the event time. ISO8601 Format.",
            "example": "2025-03-26T00:00:000Z"
          }
        },
        "required": [
          "appId",
          "meterId",
          "eventId",
          "locationId",
          "companyId",
          "description",
          "units"
        ]
      },
      "DeleteIntegrationBodyDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "The company id from which the application is to be uninstalled. If you pass agency token, then companyId is required. It will uninstall application from agency as well as all sub-accounts.",
            "example": "tDtDnQdgm2LXpyiqYvZ6"
          },
          "locationId": {
            "type": "string",
            "description": "The location id from which the application is to be uninstalled. If you pass location token, then locationId is required. It will uninstall application from that location only.",
            "example": "tDtDnQdgm2LXpyiqYvZ6"
          },
          "reason": {
            "type": "string",
            "description": "The reason for uninstalling the application. Reason is required if you are uninstalling the application as a developer.",
            "example": "Application is not working as expected"
          }
        }
      },
      "DeleteIntegrationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "The status of the uninstallation of the application",
            "example": true
          }
        },
        "required": [
          "success"
        ]
      },
      "WhitelabelDetailsDTO": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Domain of the whitelabel company",
            "example": "example.com"
          },
          "logoUrl": {
            "type": "string",
            "description": "Logo URL of the whitelabel company",
            "example": "https://example.com/logo.png"
          }
        },
        "required": [
          "domain",
          "logoUrl"
        ]
      },
      "InstallerDetailsDTO": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "example": "company123"
          },
          "locationId": {
            "type": "string",
            "description": "Location ID (if applicable)",
            "example": "location123"
          },
          "companyName": {
            "type": "string",
            "description": "Company name",
            "example": "Example Company"
          },
          "companyEmail": {
            "type": "string",
            "description": "Company email",
            "example": "contact@example.com"
          },
          "companyOwnerFullName": {
            "type": "string",
            "description": "Company owner full name",
            "example": "John Doe"
          },
          "userId": {
            "type": "string",
            "description": "User ID who installed the app",
            "example": "user123"
          },
          "isWhitelabelCompany": {
            "type": "boolean",
            "description": "Whether the company is a whitelabel company",
            "example": false
          },
          "companyHighLevelPlan": {
            "type": "string",
            "description": "Company plan",
            "example": "agency_monthly_497"
          },
          "marketplaceAppPlanId": {
            "type": "string",
            "description": "Marketplace app plan ID for paid apps",
            "example": "plan123"
          },
          "whitelabelDetails": {
            "description": "Whitelabel details (only present if isWhitelabelCompany is true)",
            "allOf": [
              {
                "$ref": "#/components/schemas/WhitelabelDetailsDTO"
              }
            ]
          }
        },
        "required": [
          "companyId",
          "companyName",
          "companyEmail",
          "userId",
          "isWhitelabelCompany"
        ]
      },
      "GetInstallerDetailsResponseDTO": {
        "type": "object",
        "properties": {
          "installationDetails": {
            "description": "Installation details",
            "allOf": [
              {
                "$ref": "#/components/schemas/InstallerDetailsDTO"
              }
            ]
          }
        },
        "required": [
          "installationDetails"
        ]
      }
    }
  },
  "x-tagGroups": {
    "name": "Developer marketplace",
    "tags": [
      "Marketplace",
      "App Management",
      "Wallet Charges"
    ]
  }
}