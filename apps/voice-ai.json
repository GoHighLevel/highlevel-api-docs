{
  "openapi": "3.0.0",
  "paths": {
    "/voice-ai/agents": {
      "post": {
        "operationId": "create-agent",
        "summary": "Create Agent",
        "description": "Create a new voice AI agent configuration and settings",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentCreationRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agent created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agents.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "get-agents",
        "summary": "List Agents",
        "description": "Retrieve a paginated list of agents for given location.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number starting from 1",
            "schema": {
              "minimum": 1,
              "maximum": 5000,
              "default": 1,
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agents.readonly"
            ]
          }
        ]
      }
    },
    "/voice-ai/agents/{agentId}": {
      "patch": {
        "operationId": "patch-agent",
        "summary": "Patch Agent",
        "description": "Partially update an existing voice AI agent",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "description": "Unique agent identifier",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAgentDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAgentResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agents.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "get-agent",
        "summary": "Get Agent",
        "description": "Retrieve detailed configuration and settings for a specific voice AI agent",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "description": "Unique agent identifier",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agents.readonly"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-agent",
        "summary": "Delete Agent",
        "description": "Delete a voice AI agent and all its configurations",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "agentId",
            "required": true,
            "in": "path",
            "description": "Unique agent identifier",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Agent deleted successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Agents"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agents.write"
            ]
          }
        ]
      }
    },
    "/voice-ai/dashboard/call-logs": {
      "get": {
        "operationId": "get-call-logs",
        "summary": "List Call Logs",
        "description": "Returns call logs for Voice AI agents scoped to a location. Supports filtering by agent, contact, call type, action types, and date range (interpreted in the provided IANA timezone). Also supports sorting and 1-based pagination.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location identifier. Filters results to this location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "required": false,
            "in": "query",
            "description": "Agent identifier. When provided, returns logs for this agent only.",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": false,
            "in": "query",
            "description": "Contact IDs (comma-separated) to filter by.",
            "schema": {
              "example": "contact123,contact456",
              "type": "string"
            }
          },
          {
            "name": "callType",
            "required": false,
            "in": "query",
            "description": "Call type filter.",
            "schema": {
              "enum": [
                "LIVE",
                "TRIAL"
              ],
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date filter (Unix timestamp). Must be less than endDate. Both startDate and endDate must be provided together.",
            "schema": {
              "example": 1679308800000,
              "type": "number"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date filter (Unix timestamp). Must be greater than startDate. Both startDate and endDate must be provided together.",
            "schema": {
              "example": 1679395199000,
              "type": "number"
            }
          },
          {
            "name": "actionType",
            "required": false,
            "in": "query",
            "description": "Action type filter for call logs (comma-separated ACTION_TYPE values)",
            "schema": {
              "example": "SMS,CALL_TRANSFER,WORKFLOW_TRIGGER",
              "enum": [
                "CALL_TRANSFER",
                "DATA_EXTRACTION",
                "IN_CALL_DATA_EXTRACTION",
                "WORKFLOW_TRIGGER",
                "SMS",
                "APPOINTMENT_BOOKING",
                "CUSTOM_ACTION",
                "KNOWLEDGE_BASE"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by. Defaults to newest if omitted.",
            "schema": {
              "enum": [
                "duration",
                "createdAt"
              ],
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Sort direction. Applies only when sortBy is provided.",
            "schema": {
              "enum": [
                "ascend",
                "descend"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (1-based).",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "description": "Page size (max 50).",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved call logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallLogsResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-dashboard.readonly"
            ]
          }
        ]
      }
    },
    "/voice-ai/dashboard/call-logs/{callId}": {
      "get": {
        "operationId": "getCallLog",
        "summary": "Get Call Log",
        "description": "Returns a call log by callId.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "callId",
            "required": true,
            "in": "path",
            "description": "Call ID",
            "schema": {
              "example": "507f1f77bcf86cd799439011",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved call log",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallLogDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-dashboard.readonly"
            ]
          }
        ]
      }
    },
    "/voice-ai/actions": {
      "post": {
        "operationId": "create-action",
        "summary": "Create Agent Action",
        "description": "Create a new action for a voice AI agent. Actions define specific behaviors and capabilities for the agent during calls.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSingleActionDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Action created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateActionResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Actions"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agent-goals.write"
            ]
          }
        ]
      }
    },
    "/voice-ai/actions/{actionId}": {
      "put": {
        "operationId": "update-action",
        "summary": "Update Agent Action",
        "description": "Update an existing action for a voice AI agent. Modifies the behavior and configuration of an agent action.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "actionId",
            "required": true,
            "in": "path",
            "description": "Unique identifier for the action",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSingleActionDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateActionResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Actions"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agent-goals.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "get-action",
        "summary": "Get Agent Action",
        "description": "Retrieve details of a specific action by its ID. Returns the action configuration including actionParameters.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "actionId",
            "required": true,
            "in": "path",
            "description": "Unique identifier for the action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetActionResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Actions"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agent-goals.readonly"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-action",
        "summary": "Delete Agent Action",
        "description": "Delete an existing action from a voice AI agent. This permanently removes the action and its configuration.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-04-15"
              ]
            }
          },
          {
            "name": "actionId",
            "required": true,
            "in": "path",
            "description": "Unique identifier for the action",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location ID",
            "schema": {
              "example": "LOC123456789ABCDEF",
              "type": "string"
            }
          },
          {
            "name": "agentId",
            "required": true,
            "in": "query",
            "description": "Agent ID the action is attached to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action deleted successfully"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Actions"
        ],
        "security": [
          {
            "bearer": [
              "voice-ai-agent-goals.write"
            ]
          }
        ]
      }
    }
  },
  "info": {
    "title": "Voice AI API",
    "description": "Documentation for Voice AI API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Voice-AI",
      "description": "Documentation for Voice AI API"
    },
    {
      "name": "Dashboard",
      "description": "Documentation for Voice AI API"
    },
    {
      "name": "Agents",
      "description": "Documentation for Voice AI API"
    },
    {
      "name": "Actions",
      "description": "Documentation for Voice AI API"
    }
  ],
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account.",
        "type": "http"
      },
      "Agency-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency (OR) Private Integration Token of Agency.",
        "type": "http"
      },
      "Agency-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency.",
        "type": "http"
      }
    },
    "schemas": {
      "VoiceAILanguage": {
        "type": "string",
        "description": "Language code for the agent's speech and understanding. Default: \"en-US\"",
        "enum": [
          "en-US",
          "pt-BR",
          "es",
          "fr",
          "de",
          "it",
          "nl-NL",
          "multi"
        ]
      },
      "PatienceLevel": {
        "type": "string",
        "description": "Tolerance level for caller response delays. Default: \"high\"",
        "enum": [
          "low",
          "medium",
          "high"
        ]
      },
      "SendPostCallNotificationDTO": {
        "type": "object",
        "properties": {
          "admins": {
            "type": "boolean",
            "description": "Enables post-call notifications to all admin users in the location. Default: true",
            "example": true
          },
          "allUsers": {
            "type": "boolean",
            "description": "Enables post-call notifications to all users in the location. Default: false",
            "example": false
          },
          "contactAssignedUser": {
            "type": "boolean",
            "description": "Enables post-call notifications to the user assigned to the contact. Default: false",
            "example": false
          },
          "specificUsers": {
            "description": "Array of specific user IDs to receive post-call notifications. Default: []",
            "example": [
              "user_507f1f77bcf86cd799439011"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customEmails": {
            "description": "Array of custom email addresses to receive post-call notifications. Default: []",
            "example": [
              "manager@company.com"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "admins",
          "allUsers",
          "contactAssignedUser",
          "specificUsers",
          "customEmails"
        ]
      },
      "IntervalDTO": {
        "type": "object",
        "properties": {
          "startHour": {
            "type": "number",
            "description": "Starting hour of the working interval in 24-hour format (0-23)",
            "example": 9,
            "minimum": 0,
            "maximum": 23
          },
          "endHour": {
            "type": "number",
            "description": "Ending hour of the working interval in 24-hour format (0-23)",
            "example": 17,
            "minimum": 0,
            "maximum": 23
          },
          "startMinute": {
            "type": "number",
            "description": "Starting minute of the working interval (0-59)",
            "example": 0,
            "minimum": 0,
            "maximum": 59
          },
          "endMinute": {
            "type": "number",
            "description": "Ending minute of the working interval (0-59)",
            "example": 30,
            "minimum": 0,
            "maximum": 59
          }
        },
        "required": [
          "startHour",
          "endHour",
          "startMinute",
          "endMinute"
        ]
      },
      "AgentWorkingHoursDTO": {
        "type": "object",
        "properties": {
          "dayOfTheWeek": {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "description": "Day of the week for this working hours configuration (Monday=1 to Sunday=7)",
            "example": 1
          },
          "intervals": {
            "description": "Array of time intervals when the agent is available on this day",
            "example": [
              {
                "startHour": 9,
                "startMinute": 0,
                "endHour": 17,
                "endMinute": 30
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntervalDTO"
            }
          }
        },
        "required": [
          "dayOfTheWeek",
          "intervals"
        ]
      },
      "TranslationDTO": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enables language translation for agent conversations. Default: false",
            "example": false
          },
          "language": {
            "type": "string",
            "description": "Target language code for translation (e.g., \"es\" for Spanish, \"fr\" for French).",
            "example": "es"
          }
        },
        "required": [
          "enabled"
        ]
      },
      "AgentCreationRequestDTO": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "description": "Unique identifier for the location where this agent will operate",
            "example": "LOC123456789ABCDEF"
          },
          "agentName": {
            "type": "string",
            "description": "Display name for the voice AI agent, between 1-40 characters. Default: \"My Agent {random 3 digit number}\"",
            "example": "Customer Support Agent",
            "maxLength": 40,
            "minLength": 1
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business this agent represents. Default: Uses location name",
            "example": "Acme Corporation",
            "minLength": 1
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Initial greeting spoken when the agent answers calls. Default: Auto generated",
            "example": "Hello! Thank you for calling Acme Corporation. How can I assist you today?",
            "maxLength": 190,
            "minLength": 1
          },
          "agentPrompt": {
            "type": "string",
            "description": "Custom instructions defining the agent's behavior and personality. Default: Basic prompt generated automatically",
            "example": "You are a helpful customer service representative. Always be polite and professional."
          },
          "voiceId": {
            "type": "string",
            "description": "Identifier for the speech synthesis voice from available voice options. Default: Auto generated",
            "example": "507f1f77bcf86cd799439011"
          },
          "language": {
            "example": "en-US",
            "$ref": "#/components/schemas/VoiceAILanguage"
          },
          "patienceLevel": {
            "example": "low",
            "$ref": "#/components/schemas/PatienceLevel"
          },
          "maxCallDuration": {
            "type": "number",
            "description": "Maximum call duration in seconds, between 180-900 (3-15 minutes). Default: 300 seconds (5 minutes)",
            "example": 600,
            "minimum": 180,
            "maximum": 900
          },
          "sendUserIdleReminders": {
            "type": "boolean",
            "description": "Enables automatic reminders when callers are silent. Default: true",
            "example": true
          },
          "reminderAfterIdleTimeSeconds": {
            "type": "number",
            "description": "Seconds to wait before sending idle reminders, between 1-20. Default: 8 seconds",
            "example": 5,
            "minimum": 1,
            "maximum": 20
          },
          "inboundNumber": {
            "type": "string",
            "description": "Phone number for receiving inbound calls to this agent. Default: null",
            "example": "+1234567890"
          },
          "numberPoolId": {
            "type": "string",
            "description": "Identifier for the number pool managing phone number allocation. Default: null",
            "example": "pool_507f1f77bcf86cd799439011"
          },
          "callEndWorkflowIds": {
            "description": "Array of workflow IDs to trigger automatically when calls end. Default: []",
            "example": [
              "wf_507f1f77bcf86cd799439011",
              "wf_507f1f77bcf86cd799439012"
            ],
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendPostCallNotificationTo": {
            "description": "Configuration for post-call email notifications to various recipients. Default: []",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendPostCallNotificationDTO"
              }
            ]
          },
          "agentWorkingHours": {
            "description": "Time intervals defining when the agent accepts calls, organized by day of week. Default: [] (available 24/7)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWorkingHoursDTO"
            }
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier affecting working hours and scheduling. Default: Location timezone",
            "example": "America/New_York",
            "pattern": "^[A-Za-z_]+/[A-Za-z_]+$"
          },
          "isAgentAsBackupDisabled": {
            "type": "boolean",
            "description": "Prevents this agent from being used as a fallback option. Default: false (Available as backup agent)",
            "example": false
          },
          "translation": {
            "description": "Language translation settings including enablement flag and target language code. Rules: (1) translation.enabled can only be true if the agent's language is not en-US; (2) when enabled, translation.language must be either the agent's language or en-US; (3) when enabled, translation.language is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationDTO"
              }
            ]
          }
        },
        "required": [
          "locationId"
        ]
      },
      "SendPostCallNotificationSchema": {
        "type": "object",
        "properties": {
          "admins": {
            "type": "boolean",
            "description": "Send notifications to admins",
            "example": true
          },
          "allUsers": {
            "type": "boolean",
            "description": "Send notifications to all users",
            "example": false
          },
          "contactAssignedUser": {
            "type": "boolean",
            "description": "Send notifications to contact assigned user",
            "example": false
          },
          "specificUsers": {
            "description": "Specific user IDs to notify",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customEmails": {
            "description": "Custom email addresses to notify",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TranslationSchema": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether translation is enabled",
            "example": false
          },
          "language": {
            "type": "string",
            "description": "Translation language code",
            "example": "es"
          }
        }
      },
      "CreateAgentResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the created agent",
            "example": "507f1f77bcf86cd799439011"
          },
          "locationId": {
            "type": "string",
            "description": "Unique identifier for the location where this agent operates",
            "example": "LOC123456789ABCDEF"
          },
          "agentName": {
            "type": "string",
            "description": "Display name of the voice AI agent",
            "example": "Customer Support Agent"
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business this agent represents",
            "example": "Acme Corporation"
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Greeting message spoken when the agent answers calls",
            "example": "Hello! Thank you for calling. How can I assist you today?"
          },
          "agentPrompt": {
            "type": "string",
            "description": "Custom instructions defining the agent's behavior",
            "example": "You are a helpful customer service representative."
          },
          "voiceId": {
            "type": "string",
            "description": "Identifier for the speech synthesis voice being used",
            "example": "507f1f77bcf86cd799439011"
          },
          "language": {
            "type": "string",
            "description": "Language code for the agent's speech and understanding",
            "example": "en-US"
          },
          "patienceLevel": {
            "type": "string",
            "description": "Current tolerance level for caller response delays",
            "example": "medium"
          },
          "maxCallDuration": {
            "type": "number",
            "description": "Maximum call duration in seconds, between 180-900",
            "example": 600,
            "minimum": 180,
            "maximum": 900
          },
          "sendUserIdleReminders": {
            "type": "boolean",
            "description": "Indicates whether automatic idle reminders are enabled",
            "example": true
          },
          "reminderAfterIdleTimeSeconds": {
            "type": "number",
            "description": "Seconds to wait before sending idle reminders, between 1-20",
            "example": 5,
            "minimum": 1,
            "maximum": 20
          },
          "inboundNumber": {
            "type": "string",
            "description": "Phone number for receiving inbound calls",
            "example": "+1234567890"
          },
          "numberPoolId": {
            "type": "string",
            "description": "Identifier for the number pool managing this agent's phone allocation",
            "example": "pool_507f1f77bcf86cd799439011"
          },
          "callEndWorkflowIds": {
            "description": "Array of workflow IDs triggered automatically when calls end",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendPostCallNotificationTo": {
            "description": "Current post-call notification settings including recipient configuration",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendPostCallNotificationSchema"
              }
            ]
          },
          "agentWorkingHours": {
            "description": "Time intervals when the agent accepts calls, organized by day of week",
            "example": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWorkingHoursDTO"
            }
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier for working hours and scheduling",
            "example": "America/New_York"
          },
          "isAgentAsBackupDisabled": {
            "type": "boolean",
            "description": "Indicates whether this agent is excluded from backup scenarios",
            "example": false
          },
          "translation": {
            "description": "Current language translation settings including enablement status and target language",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationSchema"
              }
            ]
          }
        },
        "required": [
          "id",
          "locationId",
          "agentName",
          "businessName",
          "welcomeMessage",
          "agentPrompt",
          "voiceId",
          "language",
          "patienceLevel",
          "maxCallDuration",
          "sendUserIdleReminders",
          "reminderAfterIdleTimeSeconds",
          "timezone",
          "isAgentAsBackupDisabled"
        ]
      },
      "PatchAgentDTO": {
        "type": "object",
        "properties": {
          "agentName": {
            "type": "string",
            "description": "Display name for the voice AI agent, between 1-40 characters. Default: \"My Agent {random 3 digit number}\"",
            "example": "Customer Support Agent",
            "maxLength": 40,
            "minLength": 1
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business this agent represents. Default: Uses location name",
            "example": "Acme Corporation",
            "minLength": 1
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Initial greeting spoken when the agent answers calls. Default: Auto generated",
            "example": "Hello! Thank you for calling Acme Corporation. How can I assist you today?",
            "maxLength": 190,
            "minLength": 1
          },
          "agentPrompt": {
            "type": "string",
            "description": "Custom instructions defining the agent's behavior and personality. Default: Basic prompt generated automatically",
            "example": "You are a helpful customer service representative. Always be polite and professional."
          },
          "voiceId": {
            "type": "string",
            "description": "Identifier for the speech synthesis voice from available voice options. Default: Auto generated",
            "example": "507f1f77bcf86cd799439011"
          },
          "language": {
            "example": "en-US",
            "$ref": "#/components/schemas/VoiceAILanguage"
          },
          "patienceLevel": {
            "example": "low",
            "$ref": "#/components/schemas/PatienceLevel"
          },
          "maxCallDuration": {
            "type": "number",
            "description": "Maximum call duration in seconds, between 180-900 (3-15 minutes). Default: 300 seconds (5 minutes)",
            "example": 600,
            "minimum": 180,
            "maximum": 900
          },
          "sendUserIdleReminders": {
            "type": "boolean",
            "description": "Enables automatic reminders when callers are silent. Default: true",
            "example": true
          },
          "reminderAfterIdleTimeSeconds": {
            "type": "number",
            "description": "Seconds to wait before sending idle reminders, between 1-20. Default: 8 seconds",
            "example": 5,
            "minimum": 1,
            "maximum": 20
          },
          "inboundNumber": {
            "type": "string",
            "description": "Phone number for receiving inbound calls to this agent. Default: null",
            "example": "+1234567890"
          },
          "numberPoolId": {
            "type": "string",
            "description": "Identifier for the number pool managing phone number allocation. Default: null",
            "example": "pool_507f1f77bcf86cd799439011"
          },
          "callEndWorkflowIds": {
            "description": "Array of workflow IDs to trigger automatically when calls end. Default: []",
            "example": [
              "wf_507f1f77bcf86cd799439011",
              "wf_507f1f77bcf86cd799439012"
            ],
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendPostCallNotificationTo": {
            "description": "Configuration for post-call email notifications to various recipients. Default: []",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendPostCallNotificationDTO"
              }
            ]
          },
          "agentWorkingHours": {
            "description": "Time intervals defining when the agent accepts calls, organized by day of week. Default: [] (available 24/7)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWorkingHoursDTO"
            }
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier affecting working hours and scheduling. Default: Location timezone",
            "example": "America/New_York",
            "pattern": "^[A-Za-z_]+/[A-Za-z_]+$"
          },
          "isAgentAsBackupDisabled": {
            "type": "boolean",
            "description": "Prevents this agent from being used as a fallback option. Default: false (Available as backup agent)",
            "example": false
          },
          "translation": {
            "description": "Language translation settings including enablement flag and target language code. Rules: (1) translation.enabled can only be true if the agent's language is not en-US; (2) when enabled, translation.language must be either the agent's language or en-US; (3) when enabled, translation.language is required.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationDTO"
              }
            ]
          }
        }
      },
      "PatchAgentResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the created agent",
            "example": "507f1f77bcf86cd799439011"
          },
          "locationId": {
            "type": "string",
            "description": "Unique identifier for the location where this agent operates",
            "example": "LOC123456789ABCDEF"
          },
          "agentName": {
            "type": "string",
            "description": "Display name of the voice AI agent",
            "example": "Customer Support Agent"
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business this agent represents",
            "example": "Acme Corporation"
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Greeting message spoken when the agent answers calls",
            "example": "Hello! Thank you for calling. How can I assist you today?"
          },
          "agentPrompt": {
            "type": "string",
            "description": "Custom instructions defining the agent's behavior",
            "example": "You are a helpful customer service representative."
          },
          "voiceId": {
            "type": "string",
            "description": "Identifier for the speech synthesis voice being used",
            "example": "507f1f77bcf86cd799439011"
          },
          "language": {
            "type": "string",
            "description": "Language code for the agent's speech and understanding",
            "example": "en-US"
          },
          "patienceLevel": {
            "type": "string",
            "description": "Current tolerance level for caller response delays",
            "example": "medium"
          },
          "maxCallDuration": {
            "type": "number",
            "description": "Maximum call duration in seconds, between 180-900",
            "example": 600,
            "minimum": 180,
            "maximum": 900
          },
          "sendUserIdleReminders": {
            "type": "boolean",
            "description": "Indicates whether automatic idle reminders are enabled",
            "example": true
          },
          "reminderAfterIdleTimeSeconds": {
            "type": "number",
            "description": "Seconds to wait before sending idle reminders, between 1-20",
            "example": 5,
            "minimum": 1,
            "maximum": 20
          },
          "inboundNumber": {
            "type": "string",
            "description": "Phone number for receiving inbound calls",
            "example": "+1234567890"
          },
          "numberPoolId": {
            "type": "string",
            "description": "Identifier for the number pool managing this agent's phone allocation",
            "example": "pool_507f1f77bcf86cd799439011"
          },
          "callEndWorkflowIds": {
            "description": "Array of workflow IDs triggered automatically when calls end",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendPostCallNotificationTo": {
            "description": "Current post-call notification settings including recipient configuration",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendPostCallNotificationSchema"
              }
            ]
          },
          "agentWorkingHours": {
            "description": "Time intervals when the agent accepts calls, organized by day of week",
            "example": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWorkingHoursDTO"
            }
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier for working hours and scheduling",
            "example": "America/New_York"
          },
          "isAgentAsBackupDisabled": {
            "type": "boolean",
            "description": "Indicates whether this agent is excluded from backup scenarios",
            "example": false
          },
          "translation": {
            "description": "Current language translation settings including enablement status and target language",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationSchema"
              }
            ]
          }
        },
        "required": [
          "id",
          "locationId",
          "agentName",
          "businessName",
          "welcomeMessage",
          "agentPrompt",
          "voiceId",
          "language",
          "patienceLevel",
          "maxCallDuration",
          "sendUserIdleReminders",
          "reminderAfterIdleTimeSeconds",
          "timezone",
          "isAgentAsBackupDisabled"
        ]
      },
      "AgentActionResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this action",
            "example": "507f1f77bcf86cd799439011"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ]
          }
        },
        "required": [
          "id",
          "actionType",
          "name",
          "actionParameters"
        ]
      },
      "GetAgentResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the created agent",
            "example": "507f1f77bcf86cd799439011"
          },
          "locationId": {
            "type": "string",
            "description": "Unique identifier for the location where this agent operates",
            "example": "LOC123456789ABCDEF"
          },
          "agentName": {
            "type": "string",
            "description": "Display name of the voice AI agent",
            "example": "Customer Support Agent"
          },
          "businessName": {
            "type": "string",
            "description": "Name of the business this agent represents",
            "example": "Acme Corporation"
          },
          "welcomeMessage": {
            "type": "string",
            "description": "Greeting message spoken when the agent answers calls",
            "example": "Hello! Thank you for calling. How can I assist you today?"
          },
          "agentPrompt": {
            "type": "string",
            "description": "Custom instructions defining the agent's behavior",
            "example": "You are a helpful customer service representative."
          },
          "voiceId": {
            "type": "string",
            "description": "Identifier for the speech synthesis voice being used",
            "example": "507f1f77bcf86cd799439011"
          },
          "language": {
            "type": "string",
            "description": "Language code for the agent's speech and understanding",
            "example": "en-US"
          },
          "patienceLevel": {
            "type": "string",
            "description": "Current tolerance level for caller response delays",
            "example": "medium"
          },
          "maxCallDuration": {
            "type": "number",
            "description": "Maximum call duration in seconds, between 180-900",
            "example": 600,
            "minimum": 180,
            "maximum": 900
          },
          "sendUserIdleReminders": {
            "type": "boolean",
            "description": "Indicates whether automatic idle reminders are enabled",
            "example": true
          },
          "reminderAfterIdleTimeSeconds": {
            "type": "number",
            "description": "Seconds to wait before sending idle reminders, between 1-20",
            "example": 5,
            "minimum": 1,
            "maximum": 20
          },
          "inboundNumber": {
            "type": "string",
            "description": "Phone number for receiving inbound calls",
            "example": "+1234567890"
          },
          "numberPoolId": {
            "type": "string",
            "description": "Identifier for the number pool managing this agent's phone allocation",
            "example": "pool_507f1f77bcf86cd799439011"
          },
          "callEndWorkflowIds": {
            "description": "Array of workflow IDs triggered automatically when calls end",
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sendPostCallNotificationTo": {
            "description": "Current post-call notification settings including recipient configuration",
            "allOf": [
              {
                "$ref": "#/components/schemas/SendPostCallNotificationSchema"
              }
            ]
          },
          "agentWorkingHours": {
            "description": "Time intervals when the agent accepts calls, organized by day of week",
            "example": [],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWorkingHoursDTO"
            }
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier for working hours and scheduling",
            "example": "America/New_York"
          },
          "isAgentAsBackupDisabled": {
            "type": "boolean",
            "description": "Indicates whether this agent is excluded from backup scenarios",
            "example": false
          },
          "translation": {
            "description": "Current language translation settings including enablement status and target language",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationSchema"
              }
            ]
          },
          "actions": {
            "description": "Raw actions configured for this agent with complete actionParameters structure",
            "example": [
              {
                "_id": "507f1f77bcf86cd799439011",
                "actionType": "CALL_TRANSFER",
                "name": "Transfer to Manager",
                "actionParameters": {
                  "triggerPrompt": "When caller asks for manager",
                  "triggerMessage": "Let me transfer you",
                  "transferToType": "number",
                  "transferToValue": "+1234567890"
                }
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentActionResponseDTO"
            }
          }
        },
        "required": [
          "id",
          "locationId",
          "agentName",
          "businessName",
          "welcomeMessage",
          "agentPrompt",
          "voiceId",
          "language",
          "patienceLevel",
          "maxCallDuration",
          "sendUserIdleReminders",
          "reminderAfterIdleTimeSeconds",
          "timezone",
          "isAgentAsBackupDisabled",
          "actions"
        ]
      },
      "GetAgentsResponseDTO": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total number of items",
            "example": 150
          },
          "page": {
            "type": "number",
            "description": "Page number starting from 1",
            "example": 2
          },
          "pageSize": {
            "type": "number",
            "description": "Number of items per page",
            "example": 10
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAgentResponseDTO"
            }
          }
        },
        "required": [
          "total",
          "page",
          "pageSize",
          "agents"
        ]
      },
      "CallTransferActionParameters": {
        "type": "object",
        "properties": {
          "triggerPrompt": {
            "type": "string",
            "description": "When to trigger this action during the call",
            "example": "When the caller asks to speak to a manager"
          },
          "transferToType": {
            "type": "string",
            "description": "Type of transfer destination (currently only \"number\" is supported)",
            "enum": [
              "number"
            ],
            "example": "number"
          },
          "transferToValue": {
            "type": "string",
            "description": "Phone number to transfer to. Must start with +, include country code, contain only numbers, and be 11-16 characters long (e.g., +12345678901).",
            "example": "+12345678901"
          },
          "triggerMessage": {
            "type": "string",
            "description": "Message to tell the caller before transferring",
            "example": "Let me transfer you to a manager right away"
          },
          "hearWhisperMessage": {
            "type": "boolean",
            "description": "Whether to play whisper message to the receiving party",
            "example": true
          }
        },
        "required": [
          "triggerPrompt",
          "transferToType",
          "transferToValue",
          "triggerMessage"
        ]
      },
      "DataExtractionActionParameters": {
        "type": "object",
        "properties": {
          "contactFieldId": {
            "type": "string",
            "description": "ID of the contact field to be updated with the extracted data",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": {
            "type": "string",
            "description": "Description of what data to extract",
            "example": "Caller's phone number"
          },
          "examples": {
            "description": "Example values to help Agent understand the expected format. At least one example is required, maximum 5 examples allowed.",
            "example": [
              "+1234567890",
              "+9876543210"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overwriteExistingValue": {
            "type": "boolean",
            "description": "Whether to overwrite existing field value if already set, default is false",
            "example": false,
            "default": false
          }
        },
        "required": [
          "contactFieldId",
          "description",
          "examples"
        ]
      },
      "InCallDataExtractionActionParameters": {
        "type": "object",
        "properties": {
          "contactFieldId": {
            "type": "string",
            "description": "ID of the contact field to be updated with the extracted data",
            "example": "507f1f77bcf86cd799439011"
          },
          "description": {
            "type": "string",
            "description": "Description of what data to extract",
            "example": "Caller's phone number"
          },
          "examples": {
            "description": "Example values to help Agent understand the expected format. At least one example is required, maximum 5 examples allowed.",
            "example": [
              "+1234567890",
              "+9876543210"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overwriteExistingValue": {
            "type": "boolean",
            "description": "Whether to overwrite existing field value if already set, default is false",
            "example": false,
            "default": false
          }
        },
        "required": [
          "contactFieldId",
          "description",
          "examples"
        ]
      },
      "WorkflowTriggerParameters": {
        "type": "object",
        "properties": {
          "triggerPrompt": {
            "type": "string",
            "description": "When to trigger this workflow",
            "example": "When caller requests a quote"
          },
          "triggerMessage": {
            "type": "string",
            "description": "Message to tell the caller",
            "example": "Let me start that process for you"
          },
          "workflowId": {
            "type": "string",
            "description": "Workflow ID to trigger",
            "example": "507f1f77bcf86cd799439011"
          }
        },
        "required": [
          "triggerPrompt",
          "triggerMessage",
          "workflowId"
        ]
      },
      "SMSParameters": {
        "type": "object",
        "properties": {
          "triggerPrompt": {
            "type": "string",
            "description": "When to send the SMS",
            "example": "When caller asks for booking confirmation"
          },
          "triggerMessage": {
            "type": "string",
            "description": "Message to tell the caller",
            "example": "I'll send you a confirmation text"
          },
          "messageBody": {
            "type": "string",
            "description": "SMS message content to send",
            "example": "Your appointment is confirmed for tomorrow at 2 PM"
          }
        },
        "required": [
          "triggerPrompt",
          "triggerMessage",
          "messageBody"
        ]
      },
      "AppointmentBookingActionParameters": {
        "type": "object",
        "properties": {
          "calendarId": {
            "type": "string",
            "description": "Calendar ID to book appointments in",
            "example": "507f1f77bcf86cd799439011"
          },
          "daysOfOfferingDates": {
            "type": "number",
            "description": "Number of days ahead to offer booking dates",
            "example": 3
          },
          "slotsPerDay": {
            "type": "number",
            "description": "Number of available slots per day",
            "example": 3
          },
          "hoursBetweenSlots": {
            "type": "number",
            "description": "Hours between available slots",
            "example": 1
          }
        },
        "required": [
          "calendarId",
          "daysOfOfferingDates",
          "slotsPerDay",
          "hoursBetweenSlots"
        ]
      },
      "CustomActionHeaderDTO": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "HTTP header name",
            "example": "id"
          },
          "value": {
            "type": "string",
            "description": "HTTP header value",
            "example": "1234567890"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "CustomActionParameterDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Parameter name",
            "example": "orderId"
          },
          "description": {
            "type": "string",
            "description": "Parameter description",
            "example": "Order ID to look up"
          },
          "type": {
            "type": "string",
            "description": "Parameter type",
            "example": "string"
          },
          "example": {
            "type": "string",
            "description": "Example parameter value",
            "example": "ORD-12345"
          }
        },
        "required": [
          "name"
        ]
      },
      "CustomActionApiDetailsDTO": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "API endpoint URL",
            "example": "https://api.example.com/orders"
          },
          "method": {
            "type": "string",
            "description": "HTTP method",
            "example": "GET",
            "enum": [
              "POST",
              "GET"
            ]
          },
          "authenticationRequired": {
            "type": "boolean",
            "description": "Whether authentication is required",
            "example": true
          },
          "authenticationValue": {
            "type": "string",
            "description": "Authentication token or API key (required if authenticationRequired is true)",
            "example": "token123"
          },
          "headers": {
            "description": "HTTP headers to include",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomActionHeaderDTO"
            }
          },
          "parameters": {
            "description": "API parameters to send",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomActionParameterDTO"
            }
          }
        },
        "required": [
          "url",
          "method"
        ]
      },
      "CustomActionParameters": {
        "type": "object",
        "properties": {
          "triggerPrompt": {
            "type": "string",
            "description": "When to call the custom API",
            "example": "When caller provides order number"
          },
          "triggerMessage": {
            "type": "string",
            "description": "Message to tell the caller",
            "example": "Let me check that order status"
          },
          "apiDetails": {
            "description": "API endpoint configuration",
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomActionApiDetailsDTO"
              }
            ]
          },
          "selectedPaths": {
            "description": "Selected response paths to extract from API response. Required: at least 1 value if the method is GET. Should be empty if the method is POST.",
            "example": [
              "data.orderId",
              "status"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "triggerPrompt",
          "triggerMessage",
          "apiDetails"
        ]
      },
      "KnowledgeBaseParameters": {
        "type": "object",
        "properties": {
          "triggerPrompt": {
            "type": "string",
            "description": "When to query the knowledge base",
            "example": "When caller asks about pricing"
          },
          "knowledgeBaseId": {
            "type": "string",
            "description": "Knowledge base ID to query",
            "example": "507f1f77bcf86cd799439011"
          }
        },
        "required": [
          "triggerPrompt",
          "knowledgeBaseId"
        ]
      },
      "CallActionSchema": {
        "type": "object",
        "properties": {
          "actionId": {
            "type": "string",
            "description": "Action ID reference",
            "example": "507f1f77bcf86cd799439015"
          },
          "actionType": {
            "type": "string",
            "description": "Action type",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "SMS"
          },
          "actionName": {
            "type": "string",
            "description": "Action name",
            "example": "Send SMS Confirmation"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action Parameters",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "sms": {
                "summary": "SMS Action Parameters",
                "value": {
                  "triggerPrompt": "When caller asks for booking confirmation",
                  "triggerMessage": "I'll send you a confirmation text",
                  "messageBody": "Your appointment is confirmed for tomorrow at 2 PM"
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action Parameters",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Customer's email address",
                  "examples": [
                    "john@example.com",
                    "jane@company.com"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action Parameters",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439020"
                }
              },
              "appointmentBooking": {
                "summary": "Appointment Booking Action Parameters",
                "value": {
                  "calendarId": "507f1f77bcf86cd799439022",
                  "daysOfOfferingDates": 3,
                  "slotsPerDay": 3,
                  "hoursBetweenSlots": 1
                }
              },
              "customAction": {
                "summary": "Custom Action Parameters",
                "value": {
                  "triggerPrompt": "When caller provides order number",
                  "triggerMessage": "Let me check that order status",
                  "apiDetails": {
                    "url": "https://api.example.com/orders",
                    "method": "GET",
                    "authenticationRequired": true,
                    "authenticationValue": "token123",
                    "parameters": [
                      {
                        "name": "orderId",
                        "description": "Order ID to look up",
                        "type": "string",
                        "example": "ORD-12345"
                      }
                    ]
                  },
                  "responsePathsToExtract": [
                    "data.orderId",
                    "status"
                  ]
                }
              },
              "knowledgeBase": {
                "summary": "Knowledge Base Action Parameters",
                "value": {
                  "triggerPrompt": "When caller asks about pricing",
                  "triggerMessage": "Let me look that up for you",
                  "knowledgeBaseId": "507f1f77bcf86cd799439027",
                  "parameters": [
                    {
                      "name": "category",
                      "description": "Product category to search",
                      "type": "string",
                      "example": "pricing"
                    }
                  ]
                }
              }
            }
          },
          "executedAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the action was executed",
            "example": "2024-01-15T10:32:00.000Z"
          },
          "triggerReceivedAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the trigger was received",
            "example": "2024-01-15T10:31:45.000Z"
          }
        },
        "required": [
          "actionType",
          "actionName"
        ]
      },
      "ExtractedDataSchema": {
        "type": "object",
        "properties": {}
      },
      "CallLogDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the call",
            "example": "507f1f77bcf86cd799439011"
          },
          "contactId": {
            "type": "string",
            "description": "Associated contact ID",
            "example": "507f1f77bcf86cd799439012"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID associated with the call",
            "example": "507f1f77bcf86cd799439013"
          },
          "isAgentDeleted": {
            "type": "boolean",
            "description": "Whether the agent is deleted",
            "example": false
          },
          "fromNumber": {
            "type": "string",
            "description": "Caller phone number",
            "example": "+1234567890"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the call was created",
            "example": "2024-01-15T10:30:00.000Z"
          },
          "duration": {
            "type": "number",
            "description": "Call duration in seconds",
            "example": 180
          },
          "trialCall": {
            "type": "boolean",
            "description": "Whether this call was a trial call",
            "example": false
          },
          "executedCallActions": {
            "description": "Actions performed during the call. Note: The APPOINTMENT_BOOKING action will only be visible in executedCallActions from Sep 9th 2025.",
            "example": [
              {
                "actionId": "507f1f77bcf86cd799439015",
                "actionType": "CALL_TRANSFER",
                "actionName": "Transfer to Manager",
                "actionParameters": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                },
                "executedAt": "2024-01-15T10:32:00.000Z",
                "triggerReceivedAt": "2024-01-15T10:31:45.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439016",
                "actionType": "SMS",
                "actionName": "Send Confirmation SMS",
                "actionParameters": {
                  "triggerPrompt": "When caller asks for booking confirmation",
                  "triggerMessage": "I'll send you a confirmation text",
                  "messageBody": "Your appointment is confirmed for tomorrow at 2 PM"
                },
                "executedAt": "2024-01-15T10:33:30.000Z",
                "triggerReceivedAt": "2024-01-15T10:33:15.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439017",
                "actionType": "DATA_EXTRACTION",
                "actionName": "Extract Phone Number",
                "actionParameters": {
                  "contactFieldId": "507f1f77bcf86cd799439018",
                  "description": "Customer's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                },
                "executedAt": "2024-01-15T10:34:15.000Z",
                "triggerReceivedAt": "2024-01-15T10:34:00.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439019",
                "actionType": "WORKFLOW_TRIGGER",
                "actionName": "Start Follow-up Workflow",
                "actionParameters": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439020"
                },
                "executedAt": "2024-01-15T10:35:00.000Z",
                "triggerReceivedAt": "2024-01-15T10:34:45.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439021",
                "actionType": "APPOINTMENT_BOOKING",
                "actionName": "Book Consultation",
                "actionParameters": {
                  "calendarId": "507f1f77bcf86cd799439022",
                  "daysOfOfferingDates": 3,
                  "slotsPerDay": 3,
                  "hoursBetweenSlots": 1
                },
                "executedAt": "2024-01-15T10:36:45.000Z",
                "triggerReceivedAt": "2024-01-15T10:36:30.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439023",
                "actionType": "CUSTOM_ACTION",
                "actionName": "Check Order Status",
                "actionParameters": {
                  "triggerPrompt": "When caller provides order number",
                  "triggerMessage": "Let me check that order status",
                  "apiDetails": {
                    "url": "https://api.example.com/orders",
                    "method": "GET",
                    "authenticationRequired": true,
                    "authenticationValue": "token123",
                    "headers": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "parameters": [
                      {
                        "name": "orderId",
                        "description": "Order ID to look up",
                        "type": "string",
                        "example": "ORD-12345"
                      }
                    ]
                  },
                  "responsePathsToExtract": [
                    "data.orderId",
                    "status"
                  ]
                },
                "executedAt": "2024-01-15T10:37:20.000Z",
                "triggerReceivedAt": "2024-01-15T10:37:05.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439024",
                "actionType": "IN_CALL_DATA_EXTRACTION",
                "actionName": "Extract Email During Call",
                "actionParameters": {
                  "contactFieldId": "507f1f77bcf86cd799439025",
                  "description": "Customer's email address",
                  "examples": [
                    "john@example.com",
                    "jane@company.com"
                  ],
                  "overwriteExistingValue": true
                },
                "executedAt": "2024-01-15T10:31:45.000Z",
                "triggerReceivedAt": "2024-01-15T10:31:30.000Z"
              },
              {
                "actionId": "507f1f77bcf86cd799439026",
                "actionType": "KNOWLEDGE_BASE",
                "actionName": "Query Product Info",
                "actionParameters": {
                  "triggerPrompt": "When caller asks about pricing",
                  "triggerMessage": "Let me look that up for you",
                  "knowledgeBaseId": "507f1f77bcf86cd799439027",
                  "parameters": [
                    {
                      "name": "category",
                      "description": "Product category to search",
                      "type": "string",
                      "example": "pricing"
                    }
                  ]
                },
                "executedAt": "2024-01-15T10:38:10.000Z",
                "triggerReceivedAt": "2024-01-15T10:37:55.000Z"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallActionSchema"
            }
          },
          "summary": {
            "type": "string",
            "description": "Call summary",
            "example": "Customer called to inquire about product pricing and was transferred to sales team."
          },
          "transcript": {
            "type": "string",
            "description": "Call transcript",
            "example": "bot: Hello, how can I help you today?\nhuman: I would like to know about your pricing..."
          },
          "translation": {
            "description": "Transcript translation details",
            "example": {
              "translatedTranscript": "Translated version of the call transcript"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslationSchema"
              }
            ]
          },
          "extractedData": {
            "description": "Dynamic data extracted from the call based on agent configuration",
            "example": {
              "phoneNumber": "+1234567890",
              "customerName": "John Doe",
              "email": "john.doe@example.com",
              "companyName": "Acme Corp",
              "customField1": "Custom value",
              "customField2": "Another value"
            },
            "additionalProperties": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractedDataSchema"
              }
            ]
          },
          "messageId": {
            "type": "string",
            "description": "Message identifier associated with the call",
            "example": "507f1f77bcf86cd799439014"
          }
        },
        "required": [
          "id",
          "agentId",
          "isAgentDeleted",
          "createdAt",
          "duration",
          "trialCall",
          "executedCallActions",
          "summary",
          "transcript"
        ]
      },
      "CallLogsResponseDTO": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "Total number of items",
            "example": 150
          },
          "page": {
            "type": "number",
            "description": "Page number starting from 1",
            "example": 2
          },
          "pageSize": {
            "type": "number",
            "description": "Number of items per page",
            "example": 10
          },
          "callLogs": {
            "description": "Array of call logs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CallLogDTO"
            }
          }
        },
        "required": [
          "total",
          "page",
          "pageSize",
          "callLogs"
        ]
      },
      "CreateSingleActionDTO": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "Agent ID to attach the action to",
            "example": "507f1f77bcf86cd799439011"
          },
          "locationId": {
            "type": "string",
            "description": "Location ID",
            "example": "507f1f77bcf86cd799439012"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Caller's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439011"
                }
              },
              "sms": {
                "summary": "SMS Action",
                "value": {
                  "triggerPrompt": "When caller asks for booking confirmation",
                  "triggerMessage": "I'll send you a confirmation text",
                  "messageBody": "Your appointment is confirmed for tomorrow at 2 PM"
                }
              },
              "appointmentBooking": {
                "summary": "Appointment Booking Action",
                "value": {
                  "calendarId": "507f1f77bcf86cd799439011",
                  "daysOfOfferingDates": 3,
                  "slotsPerDay": 3,
                  "hoursBetweenSlots": 1
                }
              },
              "customAction": {
                "summary": "Custom Action",
                "value": {
                  "triggerPrompt": "When caller provides order number",
                  "triggerMessage": "Let me check that order status",
                  "apiDetails": {
                    "url": "https://api.example.com/orders",
                    "method": "GET",
                    "authenticationRequired": true,
                    "authenticationValue": "token123",
                    "headers": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "parameters": [
                      {
                        "name": "orderId",
                        "description": "Order ID to look up",
                        "type": "string",
                        "example": "ORD-12345"
                      }
                    ]
                  },
                  "responsePathsToExtract": [
                    "data.orderId",
                    "status"
                  ]
                }
              },
              "knowledgeBase": {
                "summary": "Knowledge Base Action",
                "value": {
                  "triggerPrompt": "When caller asks about pricing",
                  "knowledgeBaseId": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        },
        "required": [
          "agentId",
          "locationId",
          "actionType",
          "name",
          "actionParameters"
        ]
      },
      "CreateActionResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the created action",
            "example": "507f1f77bcf86cd799439011"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action Parameters",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action Parameters",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Caller's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action Parameters",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "actionType",
          "name",
          "actionParameters"
        ]
      },
      "UpdateSingleActionDTO": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "Agent ID to attach the action to",
            "example": "507f1f77bcf86cd799439011"
          },
          "locationId": {
            "type": "string",
            "description": "Location ID",
            "example": "507f1f77bcf86cd799439012"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Caller's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439011"
                }
              },
              "sms": {
                "summary": "SMS Action",
                "value": {
                  "triggerPrompt": "When caller asks for booking confirmation",
                  "triggerMessage": "I'll send you a confirmation text",
                  "messageBody": "Your appointment is confirmed for tomorrow at 2 PM"
                }
              },
              "appointmentBooking": {
                "summary": "Appointment Booking Action",
                "value": {
                  "calendarId": "507f1f77bcf86cd799439011",
                  "daysOfOfferingDates": 3,
                  "slotsPerDay": 3,
                  "hoursBetweenSlots": 1
                }
              },
              "customAction": {
                "summary": "Custom Action",
                "value": {
                  "triggerPrompt": "When caller provides order number",
                  "triggerMessage": "Let me check that order status",
                  "apiDetails": {
                    "url": "https://api.example.com/orders",
                    "method": "GET",
                    "authenticationRequired": true,
                    "authenticationValue": "token123",
                    "headers": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "parameters": [
                      {
                        "name": "orderId",
                        "description": "Order ID to look up",
                        "type": "string",
                        "example": "ORD-12345"
                      }
                    ]
                  },
                  "responsePathsToExtract": [
                    "data.orderId",
                    "status"
                  ]
                }
              },
              "knowledgeBase": {
                "summary": "Knowledge Base Action",
                "value": {
                  "triggerPrompt": "When caller asks about pricing",
                  "knowledgeBaseId": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        },
        "required": [
          "agentId",
          "locationId",
          "actionType",
          "name",
          "actionParameters"
        ]
      },
      "UpdateActionResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the created action",
            "example": "507f1f77bcf86cd799439011"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action Parameters",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action Parameters",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Caller's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action Parameters",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "actionType",
          "name",
          "actionParameters"
        ]
      },
      "GetActionResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the action",
            "example": "507f1f77bcf86cd799439011"
          },
          "actionType": {
            "type": "string",
            "description": "Type of action",
            "enum": [
              "CALL_TRANSFER",
              "DATA_EXTRACTION",
              "IN_CALL_DATA_EXTRACTION",
              "WORKFLOW_TRIGGER",
              "SMS",
              "APPOINTMENT_BOOKING",
              "CUSTOM_ACTION",
              "KNOWLEDGE_BASE"
            ],
            "example": "CALL_TRANSFER"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for this action",
            "example": "Transfer to Manager"
          },
          "actionParameters": {
            "description": "Action parameters - structure varies by actionType",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallTransferActionParameters"
              },
              {
                "$ref": "#/components/schemas/DataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/InCallDataExtractionActionParameters"
              },
              {
                "$ref": "#/components/schemas/WorkflowTriggerParameters"
              },
              {
                "$ref": "#/components/schemas/SMSParameters"
              },
              {
                "$ref": "#/components/schemas/AppointmentBookingActionParameters"
              },
              {
                "$ref": "#/components/schemas/CustomActionParameters"
              },
              {
                "$ref": "#/components/schemas/KnowledgeBaseParameters"
              }
            ],
            "examples": {
              "callTransfer": {
                "summary": "Call Transfer Action Parameters",
                "value": {
                  "transferToType": "number",
                  "transferToValue": "+12345678901",
                  "triggerMessage": "Let me transfer you to a manager right away",
                  "hearWhisperMessage": true
                }
              },
              "dataExtraction": {
                "summary": "Data Extraction Action Parameters",
                "value": {
                  "contactFieldId": "507f1f77bcf86cd799439011",
                  "description": "Caller's phone number",
                  "examples": [
                    "+1234567890",
                    "+9876543210"
                  ],
                  "overwriteExistingValue": false
                }
              },
              "workflowTrigger": {
                "summary": "Workflow Trigger Action Parameters",
                "value": {
                  "triggerPrompt": "When caller requests a quote",
                  "triggerMessage": "Let me start that process for you",
                  "workflowId": "507f1f77bcf86cd799439011"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "actionType",
          "name",
          "actionParameters"
        ]
      }
    }
  },
  "x-tagGroups": {
    "name": "Voice AI",
    "tags": [
      "Voice-AI",
      "Dashboard",
      "Agents",
      "Actions"
    ]
  }
}