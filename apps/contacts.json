{
  "openapi": "3.0.0",
  "paths": {
    "/contacts/search": {
      "post": {
        "operationId": "search-contacts-advanced",
        "summary": "Search Contacts",
        "description": "Search contacts based on combinations of advanced filters. Documentation Link - https://doc.clickup.com/8631005/d/h/87cpx-158396/6e629989abe7fad",
        "externalDocs": {
          "url": "https://doc.clickup.com/8631005/d/h/87cpx-158396/6e629989abe7fad",
          "description": "Click here for more information"
        },
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBodyV2DTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Search"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      }
    },
    "/contacts/search/duplicate": {
      "get": {
        "operationId": "get-duplicate-contact",
        "summary": "Get Duplicate Contact",
        "description": "Get Duplicate Contact.<br/><br/>If `Allow Duplicate Contact` is disabled under Settings, the global unique identifier will be used for searching the contact. If the setting is enabled, first priority for search is `email` and the second priority will be `phone`.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location Id",
            "schema": {
              "example": "sadadya1u12basyhasd",
              "type": "string"
            }
          },
          {
            "name": "number",
            "required": false,
            "in": "query",
            "description": "Phone Number - Pass in URL Encoded form. i.e +1423164516 will become `%2B1423164516`",
            "schema": {
              "example": "+1423164516",
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Email - Pass in URL Encoded form. i.e test+abc@gmail.com will become `test%2Babc%40gmail.com`",
            "schema": {
              "example": "abc@abc.com",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Search"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/tasks": {
      "get": {
        "operationId": "get-all-tasks",
        "summary": "Get all Tasks",
        "description": "Get all Tasks",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksListSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      },
      "post": {
        "operationId": "create-task",
        "summary": "Create Task",
        "description": "Create Task",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskParams"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskByIsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/tasks/{taskId}": {
      "get": {
        "operationId": "get-task",
        "summary": "Get Task",
        "description": "Get Task",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "description": "Task Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskByIsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      },
      "put": {
        "operationId": "update-task",
        "summary": "Update Task",
        "description": "Update Task",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "description": "Task Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskByIsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-task",
        "summary": "Delete Task",
        "description": "Delete Task",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "description": "Task Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/tasks/{taskId}/completed": {
      "put": {
        "operationId": "update-task-completed",
        "summary": "Update Task Completed",
        "description": "Update Task Completed",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "description": "Task Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskStatusParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskByIsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/appointments": {
      "get": {
        "operationId": "get-appointments-for-contact",
        "summary": "Get Appointments for Contact",
        "description": "Get Appointments for Contact",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Appointments"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/tags": {
      "post": {
        "operationId": "add-tags",
        "summary": "Add Tags",
        "description": "Add Tags",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagsDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddTagSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "remove-tags",
        "summary": "Remove Tags",
        "description": "Remove Tags",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeleteTagSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/notes": {
      "get": {
        "operationId": "get-all-notes",
        "summary": "Get All Notes",
        "description": "Get All Notes",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotesListSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      },
      "post": {
        "operationId": "create-note",
        "summary": "Create Note",
        "description": "Create Note",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotesDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateUpdateNoteSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/notes/{id}": {
      "get": {
        "operationId": "get-note",
        "summary": "Get Note",
        "description": "Get Note",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Note Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateUpdateNoteSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      },
      "put": {
        "operationId": "update-note",
        "summary": "Update Note",
        "description": "Update Note",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Note Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotesDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateUpdateNoteSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-note",
        "summary": "Delete Note",
        "description": "Delete Note",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Note Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNoteSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/bulk/tags/update/{type}": {
      "post": {
        "operationId": "create-association",
        "summary": "Update Contacts Tags",
        "description": "Allows you to update tags to multiple contacts at once, you can add or remove tags from the contacts",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Tags operation type",
            "example": "add",
            "schema": {
              "type": "string",
              "enum": [
                "add",
                "remove"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagsDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTagsResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Bulk"
        ]
      }
    },
    "/contacts/bulk/business": {
      "post": {
        "operationId": "add-remove-contact-from-business",
        "summary": "Add/Remove Contacts From Business",
        "description": "Add/Remove Contacts From Business . Passing a `null` businessId will remove the businessId from the contacts",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactsBusinessUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsBulkUpateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Bulk"
        ]
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "operationId": "get-contact",
        "summary": "Get Contact",
        "description": "Get Contact",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsByIdSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      },
      "put": {
        "operationId": "update-contact",
        "summary": "Update Contact",
        "description": "Please find the list of acceptable values for the `country` field  <a href=\"https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list\" target=\"_blank\">here</a>",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateContactsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-contact",
        "summary": "Delete Contact",
        "description": "Delete Contact",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "ocQHyuzHvysMo5N5VsXc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteContactsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/upsert": {
      "post": {
        "operationId": "upsert-contact",
        "summary": "Upsert Contact",
        "description": "Please find the list of acceptable values for the `country` field  <a href=\"https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list\" target=\"_blank\">here</a><br/><br/>The Upsert API will adhere to the configuration defined under the \u201cAllow Duplicate Contact\u201d setting at the Location level. If the setting is configured to check both Email and Phone, the API will attempt to identify an existing contact based on the priority sequence specified in the setting, and will create or update the contact accordingly.<br/><br/>If two separate contacts already exist\u2014one with the same email and another with the same phone\u2014and an upsert request includes both the email and phone, the API will update the contact that matches the first field in the configured sequence, and ignore the second field to prevent duplication.",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertContactDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertContactsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/business/{businessId}": {
      "get": {
        "operationId": "get-contacts-by-businessId",
        "summary": "Get Contacts By BusinessId",
        "description": "Get Contacts By BusinessId",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "businessId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "default": "25",
              "example": "10",
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "schema": {
              "example": "5DP4iH6HLkQsiKESj6rh",
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": "0",
              "example": "10",
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "schema": {
              "example": "contact name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsSearchSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/followers": {
      "post": {
        "operationId": "add-followers-contact",
        "summary": "Add Followers",
        "description": "Add Followers",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302Lunr",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FollowersDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAddFollowersSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Followers"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "remove-followers-contact",
        "summary": "Remove Followers",
        "description": "Remove Followers",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302Lunr",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FollowersDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFollowersSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Followers"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/campaigns/{campaignId}": {
      "post": {
        "operationId": "add-contact-to-campaign",
        "summary": "Add Contact to Campaign",
        "description": "Add contact to Campaign",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "3bZD1nQzbul0MCancbQD",
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "required": true,
            "in": "path",
            "description": "Campaigns Id",
            "schema": {
              "example": "Y2I9XM7aO1hncuSOlc9L",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContactToCampaignDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeleteCantactsCampaignsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "remove-contact-from-campaign",
        "summary": "Remove Contact From Campaign",
        "description": "Remove Contact From Campaign",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "3bZD1nQzbul0MCancbQD",
              "type": "string"
            }
          },
          {
            "name": "campaignId",
            "required": true,
            "in": "path",
            "description": "Campaigns Id",
            "schema": {
              "example": "Y2I9XM7aO1hncuSOlc9L",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeleteCantactsCampaignsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/campaigns/removeAll": {
      "delete": {
        "operationId": "remove-contact-from-every-campaign",
        "summary": "Remove Contact From Every Campaign",
        "description": "Remove Contact From Every Campaign",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "3bZD1nQzbul0MCancbQD",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeleteCantactsCampaignsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/{contactId}/workflow/{workflowId}": {
      "post": {
        "operationId": "add-contact-to-workflow",
        "summary": "Add Contact to Workflow",
        "description": "Add Contact to Workflow",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "required": true,
            "in": "path",
            "description": "Workflow Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsWorkflowSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "delete": {
        "operationId": "delete-contact-from-workflow",
        "summary": "Delete Contact from Workflow",
        "description": "Delete Contact from Workflow",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "contactId",
            "required": true,
            "in": "path",
            "description": "Contact Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          },
          {
            "name": "workflowId",
            "required": true,
            "in": "path",
            "description": "Workflow Id",
            "schema": {
              "example": "sx6wyHhbFdRXh302LLNR",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsWorkflowSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      }
    },
    "/contacts/": {
      "post": {
        "operationId": "create-contact",
        "summary": "Create Contact",
        "description": "Please find the list of acceptable values for the `country` field  <a href=\"https://highlevel.stoplight.io/docs/integrations/ZG9jOjI4MzUzNDIy-country-list\" target=\"_blank\">here</a>",
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContactsSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.write"
            ]
          }
        ]
      },
      "get": {
        "operationId": "get-contacts",
        "summary": "Get Contacts",
        "description": "Get Contacts\n\n **Note:** This API endpoint is deprecated. Please use the [Search Contacts](https://highlevel.stoplight.io/docs/integrations/dbe4f3a00a106-search-contacts) endpoint instead.",
        "deprecated": true,
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "locationId",
            "required": true,
            "in": "query",
            "description": "Location Id",
            "schema": {
              "example": "ve9EPM428h8vShlRW1KT",
              "type": "string"
            }
          },
          {
            "name": "startAfterId",
            "required": false,
            "in": "query",
            "description": "Start After Id",
            "schema": {
              "example": "UIaE1WjAwWKdlyD7osQI",
              "type": "string"
            }
          },
          {
            "name": "startAfter",
            "required": false,
            "in": "query",
            "description": "Start Afte",
            "schema": {
              "example": 1603870249758,
              "type": "number"
            }
          },
          {
            "name": "query",
            "required": false,
            "in": "query",
            "description": "Contact Query",
            "schema": {
              "example": "John",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limit Per Page records count. will allow maximum up to 100 and default will be 20",
            "schema": {
              "default": 20,
              "example": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsSearchSuccessfulResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../common/common-schemas.json#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "bearer": [
              "contacts.readonly"
            ]
          }
        ]
      }
    }
  },
  "info": {
    "title": "Contacts API",
    "description": "Documentation for Contacts API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Tasks",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Appointments",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Tags",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Notes",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Campaigns",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Workflow",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Bulk",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Search",
      "description": "Documentation for Contacts API"
    },
    {
      "name": "Followers",
      "description": "Documentation for Contacts API"
    }
  ],
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account (OR) Private Integration Token of Sub-Account.",
        "type": "http"
      },
      "Location-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Sub-Account.",
        "type": "http"
      },
      "Agency-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency (OR) Private Integration Token of Agency.",
        "type": "http"
      },
      "Agency-Access-Only": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Agency.",
        "type": "http"
      }
    },
    "schemas": {
      "SearchBodyV2DTO": {
        "type": "object",
        "properties": {}
      },
      "CustomFieldSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "MgobCB14YMVKuE4Ka8p1"
          },
          "value": {
            "type": "string",
            "example": "name"
          }
        }
      },
      "DndSettingSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "permanent"
            ]
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "DndSettingsSchema": {
        "type": "object",
        "properties": {
          "Call": {
            "$ref": "#/components/schemas/DndSettingSchema"
          },
          "Email": {
            "$ref": "#/components/schemas/DndSettingSchema"
          },
          "SMS": {
            "$ref": "#/components/schemas/DndSettingSchema"
          },
          "WhatsApp": {
            "$ref": "#/components/schemas/DndSettingSchema"
          },
          "GMB": {
            "$ref": "#/components/schemas/DndSettingSchema"
          },
          "FB": {
            "$ref": "#/components/schemas/DndSettingSchema"
          }
        }
      },
      "ContactOpportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1a2b3c4d5e6f7g8h9i0j"
          },
          "pipelineId": {
            "type": "string",
            "example": "pipeline123"
          },
          "pipelineStageId": {
            "type": "string",
            "example": "stage456"
          },
          "monetaryValue": {
            "type": "number",
            "example": 10000
          },
          "status": {
            "type": "string",
            "example": "open"
          }
        },
        "required": [
          "id",
          "pipeline_id",
          "pipeline_stage_id",
          "monetary_value",
          "status"
        ]
      },
      "Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "102goXVW3lIExEQPOnd3"
          },
          "phoneLabel": {
            "type": "string",
            "example": "Mobile"
          },
          "country": {
            "type": "string",
            "example": "United States"
          },
          "address": {
            "type": "string",
            "example": "123 Main Street"
          },
          "source": {
            "type": "string",
            "example": "Website"
          },
          "type": {
            "type": "string",
            "example": "lead"
          },
          "locationId": {
            "type": "string",
            "example": "502goXVW3lIExEQPOnd3"
          },
          "dnd": {
            "type": "boolean",
            "example": false
          },
          "state": {
            "type": "string",
            "example": "California"
          },
          "businessName": {
            "type": "string",
            "example": "Acme Corporation"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            }
          },
          "tags": {
            "example": [
              "tag-1",
              "tag-2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateAdded": {
            "type": "string",
            "example": "2024-06-06T18:54:57.221Z"
          },
          "additionalEmails": {
            "example": [
              "john@example.com",
              "jane@example.com"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "example": "+123456789"
          },
          "companyName": {
            "type": "string",
            "example": "XYZ Corp"
          },
          "additionalPhones": {
            "example": [
              "123456789",
              "987654321"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateUpdated": {
            "type": "string",
            "example": "2024-06-06T18:54:57.221Z"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-01-01"
          },
          "firstName": {
            "type": "string",
            "example": "john"
          },
          "lastName": {
            "type": "string",
            "example": "doe"
          },
          "firstNameLowerCase": {
            "type": "string",
            "example": "john"
          },
          "lastNameLowerCase": {
            "type": "string",
            "example": "doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "assignedTo": {
            "type": "string",
            "example": "182goXVW3lIExEQPOnd3"
          },
          "followers": {
            "example": [
              "682goXVW3lIExEQPOnd3",
              "582goXVW3lIExEQPOnd3"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validEmail": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "opportunities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactOpportunity"
            }
          },
          "postalCode": {
            "type": "string",
            "example": "12345"
          },
          "businessId": {
            "type": "string",
            "example": "282goXVW3lIExEQPOnd3"
          },
          "searchAfter": {
            "example": [
              1234,
              "102goXVW3lIExEQPOnd3"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SearchContactSuccessResponseDto": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "total": {
            "type": "number",
            "example": 120
          }
        },
        "required": [
          "contacts",
          "total"
        ]
      },
      "TaskSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "lJpzYrWdpkC2hX6t2yue"
          },
          "title": {
            "type": "string",
            "example": "test"
          },
          "body": {
            "type": "string",
            "example": "testing"
          },
          "assignedTo": {
            "type": "string",
            "example": "tesTUcmRxWrjqzJS8EjkxNKting"
          },
          "dueDate": {
            "type": "string",
            "example": "2021-07-08T02:30:00.000Z"
          },
          "completed": {
            "type": "boolean",
            "example": true
          },
          "contactId": {
            "type": "string",
            "example": "lJpzYrWdpkC2hX6t2yue"
          }
        }
      },
      "TasksListSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSchema"
            }
          }
        }
      },
      "TaskByIsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/TaskSchema"
          }
        }
      },
      "CreateTaskParams": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "First Task"
          },
          "body": {
            "type": "string",
            "example": "loram ipsum"
          },
          "dueDate": {
            "type": "string",
            "example": "2020-10-25T11:00:00Z"
          },
          "completed": {
            "type": "boolean",
            "example": true
          },
          "assignedTo": {
            "type": "string",
            "example": "hxHGVRb1YJUscrCB8eXK"
          }
        },
        "required": [
          "title",
          "dueDate",
          "completed"
        ]
      },
      "UpdateTaskBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "First Task"
          },
          "body": {
            "type": "string",
            "example": "loram ipsum"
          },
          "dueDate": {
            "type": "string",
            "example": "2020-10-25T11:00:00Z"
          },
          "completed": {
            "type": "boolean",
            "example": true
          },
          "assignedTo": {
            "type": "string",
            "example": "hxHGVRb1YJUscrCB8eXK"
          }
        }
      },
      "UpdateTaskStatusParams": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "completed"
        ]
      },
      "DeleteTaskSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "GetEventSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "YS3jaqqeehkR2Is80miy"
          },
          "calendarId": {
            "type": "string",
            "example": "YlWd2wuCAZQzh2cH1fVZ"
          },
          "status": {
            "type": "string",
            "example": "booked"
          },
          "title": {
            "type": "string",
            "example": "Test"
          },
          "assignedUserId": {
            "type": "string",
            "example": "YlWd2wuCAZQzh2cH1fVZ"
          },
          "notes": {
            "type": "string",
            "example": "test"
          },
          "startTime": {
            "type": "string",
            "example": "2021-07-16 11:00:00"
          },
          "endTime": {
            "type": "string",
            "example": "2021-07-16 11:30:00"
          },
          "address": {
            "type": "string",
            "example": "Address"
          },
          "locationId": {
            "type": "string",
            "example": "YlWd2wuCAZQzh2cH1fVZ"
          },
          "contactId": {
            "type": "string",
            "example": "YlWd2wuCAZQzh2cH1fVZ"
          },
          "groupId": {
            "type": "string",
            "example": "YlWd2wuCAZQzh2cH1fVZ"
          },
          "appointmentStatus": {
            "type": "string",
            "example": "booked"
          },
          "users": {
            "example": [
              "YlWd2wuCAZQzh2cH1fVZ",
              "YlWd2wuCAZQzh2cH1fVZ"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateAdded": {
            "type": "string",
            "example": "2021-07-16 11:00:00"
          },
          "dateUpdated": {
            "type": "string",
            "example": "2021-07-16 11:30:00"
          },
          "assignedResources": {
            "example": [
              "YlWd2wuCAZQzh2cH1fVZ",
              "YlWd2wuCAZQzh2cH1fVZ"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetEventsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetEventSchema"
            }
          }
        }
      },
      "TagsDTO": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "minim",
              "velit magna"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "tags"
        ]
      },
      "CreateAddTagSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "minim",
              "velit magna"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateDeleteTagSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "tags": {
            "example": [
              "minim",
              "velit magna"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetNoteSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "HGPcayliwcdoUFzvbTok"
          },
          "body": {
            "type": "string",
            "example": "lorem ipsum"
          },
          "userId": {
            "type": "string",
            "example": "TUcmRxWrjqzJS8EjkxNK"
          },
          "dateAdded": {
            "type": "string",
            "example": "2021-07-08T12:02:11.285Z"
          },
          "contactId": {
            "type": "string",
            "example": "TUcmRxWrjqzJS8EjkxNK"
          }
        }
      },
      "GetNotesListSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetNoteSchema"
            }
          }
        }
      },
      "NotesDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "GCs5KuzPqTls7vWclkEV"
          },
          "body": {
            "type": "string",
            "example": "lorem ipsum"
          }
        },
        "required": [
          "body"
        ]
      },
      "GetCreateUpdateNoteSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "note": {
            "$ref": "#/components/schemas/GetNoteSchema"
          }
        }
      },
      "DeleteNoteSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "UpdateTagsDTO": {
        "type": "object",
        "properties": {
          "contacts": {
            "description": "list of contact ids to be processed",
            "example": [
              "qFSqySFkVvNzOSqgGqFi",
              "abcdef",
              "qFSqySFkVvNzOSqgGqFi",
              "3ualbhnV7j3n3a9r2moD"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "description": "list of tags to be added or removed",
            "example": [
              "tag-1",
              "tag-2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locationId": {
            "type": "string",
            "description": "location id from where the bulk request is executed",
            "example": "asdrwHvLUxlfw5SqKVCN"
          },
          "removeAllTags": {
            "type": "boolean",
            "description": "Option to implement remove all tags. if true, all tags will be removed from the contacts. Can only be used with remove type.",
            "example": "false"
          }
        },
        "required": [
          "contacts",
          "tags",
          "locationId"
        ]
      },
      "UpdateTagsResponseDTO": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "description": "Indicates if the operation was successful",
            "example": true
          },
          "errorCount": {
            "type": "number",
            "description": "Number of errors encountered during the operation",
            "example": 0
          },
          "responses": {
            "description": "Responses for each contact processed",
            "example": [
              {
                "contactId": "qFSqySFkVvNzOSqgGqFi",
                "message": "Tags updated",
                "type": "success",
                "oldTags": [
                  "tag-1",
                  "tag-2"
                ],
                "tagsAdded": [],
                "tagsRemoved": []
              },
              {
                "contactId": "abcdef",
                "message": "contact id is not a valid firebase id",
                "type": "error"
              },
              {
                "contactId": "qFSqySFkVvNzOSqgGqFi",
                "message": "contact is deleted",
                "type": "error"
              },
              {
                "contactId": "3ualbhnV7j3n3a9r2moD",
                "message": "contact does not belong to location",
                "type": "error"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "succeded",
          "errorCount",
          "responses"
        ]
      },
      "ContactsBusinessUpdate": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "example": "PX8m5VwxEbcpFlzYEPVG"
          },
          "ids": {
            "example": [
              "IDqvFHGColiyK6jiatuz",
              "pOC0uJ97VYOKH2m3fkMD"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 50
            }
          },
          "businessId": {
            "type": "string",
            "example": "63b7ec34ea409a9a8bd2a4ff",
            "nullable": true
          }
        },
        "required": [
          "locationId",
          "ids",
          "businessId"
        ]
      },
      "ContactsBulkUpateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "ids": {
            "example": [
              "pOC0uJ97VYOKH2m3fkMD"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "ids"
        ]
      },
      "AttributionSource": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "Trigger Link",
            "nullable": true
          },
          "campaign": {
            "type": "string",
            "nullable": true
          },
          "utmSource": {
            "type": "string",
            "nullable": true
          },
          "utmMedium": {
            "type": "string",
            "nullable": true
          },
          "utmContent": {
            "type": "string",
            "nullable": true
          },
          "referrer": {
            "type": "string",
            "example": "https: //www.google.com",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "nullable": true
          },
          "fbclid": {
            "type": "string",
            "nullable": true
          },
          "gclid": {
            "type": "string",
            "example": "CjOKCQjwnNyUBhCZARISAI9AYIFtNnIcWcYGIOQINz_ZoFI5SSLRRugSoPZoiEu27IZBY\u00a31-MAIWmEaAo2VEALW_WCB",
            "nullable": true
          },
          "msclikid": {
            "type": "string",
            "nullable": true
          },
          "dclid": {
            "type": "string",
            "nullable": true
          },
          "fbc": {
            "type": "string",
            "nullable": true
          },
          "fbp": {
            "type": "string",
            "example": "fb. 1.1674748390986.1171287961",
            "nullable": true
          },
          "fbEventId": {
            "type": "string",
            "example": "Mozilla/5.0",
            "nullable": true
          },
          "userAgent": {
            "type": "string",
            "example": "Mozilla/5.0",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "example": "58.111.106.198",
            "nullable": true
          },
          "medium": {
            "type": "string",
            "example": "survey",
            "nullable": true
          },
          "mediumId": {
            "type": "string",
            "example": "FglfHAn30PRwsZVyQlKp",
            "nullable": true
          }
        },
        "required": []
      },
      "GetContectByIdSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seD4PfOuKoVMLkEZqohJ"
          },
          "name": {
            "type": "string",
            "example": "rubika deo"
          },
          "locationId": {
            "type": "string",
            "example": "ve9EPM428h8vShlRW1KT"
          },
          "firstName": {
            "type": "string",
            "example": "rubika"
          },
          "lastName": {
            "type": "string",
            "example": "Deo"
          },
          "email": {
            "type": "string",
            "example": "rubika@deos.com"
          },
          "emailLowerCase": {
            "type": "string",
            "example": "rubika@deos.com"
          },
          "timezone": {
            "type": "string",
            "example": ""
          },
          "companyName": {
            "type": "string",
            "example": "DGS VolMAX"
          },
          "phone": {
            "type": "string",
            "example": "+18832327657"
          },
          "dnd": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "type": {
            "type": "string",
            "example": "read"
          },
          "source": {
            "type": "string",
            "example": "public api"
          },
          "assignedTo": {
            "type": "string",
            "example": "ve9EPM428h8vShlRW1KT"
          },
          "address1": {
            "type": "string",
            "example": "3535 1st St N"
          },
          "city": {
            "type": "string",
            "example": "ruDolomitebika"
          },
          "state": {
            "type": "string",
            "example": "AL"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "postalCode": {
            "type": "string",
            "example": "35061"
          },
          "website": {
            "type": "string",
            "example": "https://www.tesla.com"
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-09-25T00:00:00.000Z"
          },
          "dateAdded": {
            "type": "string",
            "example": "2021-07-02T05:18:26.704Z"
          },
          "dateUpdated": {
            "type": "string",
            "example": "2021-07-02T05:18:26.704Z"
          },
          "attachments": {
            "type": "string"
          },
          "ssn": {
            "type": "string"
          },
          "keyword": {
            "type": "string",
            "example": "test"
          },
          "firstNameLowerCase": {
            "type": "string",
            "example": "rubika"
          },
          "fullNameLowerCase": {
            "type": "string",
            "example": "rubika deo"
          },
          "lastNameLowerCase": {
            "type": "string",
            "example": "deo"
          },
          "lastActivity": {
            "type": "string",
            "example": "2021-07-16T11:39:30.564Z"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            }
          },
          "businessId": {
            "type": "string",
            "example": "641c094001436dbc2081e642"
          },
          "attributionSource": {
            "$ref": "#/components/schemas/AttributionSource"
          },
          "lastAttributionSource": {
            "$ref": "#/components/schemas/AttributionSource"
          },
          "visitorId": {
            "type": "string",
            "description": "visitorId is the Unique ID assigned to each Live chat visitor.",
            "example": "ve9EPM428h8vShlRW1KT"
          }
        }
      },
      "ContactsByIdSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/GetContectByIdSchema"
          }
        }
      },
      "customFieldsInputArraySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "example": [
              "test",
              "test2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "customFieldsInputObjectSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "object",
            "example": {}
          }
        },
        "required": [
          "id"
        ]
      },
      "customFieldsInputStringSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ",
            "description": "Pass either `id` or `key` of custom field"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field",
            "description": "Pass either `id` or `key` of custom field"
          },
          "fieldValue": {
            "type": "string",
            "example": "9039160788"
          }
        }
      },
      "TextField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "string",
            "example": "My Text"
          }
        },
        "required": [
          "id"
        ]
      },
      "LargeTextField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "string",
            "example": "My Text"
          }
        },
        "required": [
          "id"
        ]
      },
      "SingleSelectField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "string",
            "example": "My Selected Option"
          }
        },
        "required": [
          "id"
        ]
      },
      "RadioField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "string",
            "example": "My Selected Option"
          }
        },
        "required": [
          "id"
        ]
      },
      "NumericField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "object",
            "example": 100
          }
        },
        "required": [
          "id"
        ]
      },
      "MonetoryField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "object",
            "example": 100.5
          }
        },
        "required": [
          "id"
        ]
      },
      "CheckboxField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "example": [
              "test",
              "test2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "MultiSelectField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "example": [
              "test",
              "test2"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "FileField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "6dvNaf7VhkQ9snc5vnjJ"
          },
          "key": {
            "type": "string",
            "example": "my_custom_field"
          },
          "fieldValue": {
            "type": "object",
            "example": {
              "f31175d4-2b06-4fc6-b7bc-74cd814c68cb": {
                "meta": {
                  "fieldname": "1HeGizb13P0odwgOgKSs",
                  "originalname": "IMG_20231215_164412935.jpg",
                  "encoding": "7bit",
                  "mimetype": "image/jpeg",
                  "size": 1786611,
                  "uuid": "f31175d4-2b06-4fc6-b7bc-74cd814c68cb"
                },
                "url": "https://services.leadconnectorhq.com/documents/download/w2M9qTZ0ZJz8rGt02jdJ",
                "documentId": "w2M9qTZ0ZJz8rGt02jdJ"
              }
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "InboundDndSettingSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "InboundDndSettingsSchema": {
        "type": "object",
        "properties": {
          "all": {
            "$ref": "#/components/schemas/InboundDndSettingSchema"
          }
        }
      },
      "CreateContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Rosan",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "example": "Deo",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "Rosan Deo",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "rosan@deos.com",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "example": "ve9EPM428h8vShlRW1KT"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "phone": {
            "type": "string",
            "example": "+1 888-888-8888",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "example": "3535 1st St N",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Dolomite",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "AL",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "example": "35061"
          },
          "website": {
            "type": "string",
            "example": "https://www.tesla.com",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "example": "America/Chihuahua",
            "nullable": true
          },
          "dnd": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "inboundDndSettings": {
            "$ref": "#/components/schemas/InboundDndSettingsSchema"
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextField"
                },
                {
                  "$ref": "#/components/schemas/LargeTextField"
                },
                {
                  "$ref": "#/components/schemas/SingleSelectField"
                },
                {
                  "$ref": "#/components/schemas/RadioField"
                },
                {
                  "$ref": "#/components/schemas/NumericField"
                },
                {
                  "$ref": "#/components/schemas/MonetoryField"
                },
                {
                  "$ref": "#/components/schemas/CheckboxField"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectField"
                },
                {
                  "$ref": "#/components/schemas/FileField"
                }
              ]
            }
          },
          "source": {
            "type": "string",
            "example": "public api"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "companyName": {
            "type": "string",
            "example": "DGS VolMAX",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "example": "y0BeYjuRIlDwsDcOHOJo",
            "description": "User's Id"
          }
        },
        "required": [
          "locationId"
        ]
      },
      "CreateContactSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "seD4PfOuKoVMLkEZqohJ"
          },
          "dateAdded": {
            "type": "string",
            "example": "2021-08-31T09:59:41.937Z"
          },
          "dateUpdated": {
            "type": "string",
            "example": "2021-08-31T09:59:41.937Z"
          },
          "deleted": {
            "type": "boolean",
            "example": false
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "example": "read"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            }
          },
          "locationId": {
            "type": "string",
            "example": "ve9EPM428h8vShlRW1KT"
          },
          "firstName": {
            "type": "string",
            "example": "rubika"
          },
          "firstNameLowerCase": {
            "type": "string",
            "example": "rubika"
          },
          "fullNameLowerCase": {
            "type": "string",
            "example": "rubika deo"
          },
          "lastName": {
            "type": "string",
            "example": "Deo"
          },
          "lastNameLowerCase": {
            "type": "string",
            "example": "deo"
          },
          "email": {
            "type": "string",
            "example": "rubika@deos.com"
          },
          "emailLowerCase": {
            "type": "string",
            "example": "rubika@deos.com"
          },
          "bounceEmail": {
            "type": "boolean",
            "example": false
          },
          "unsubscribeEmail": {
            "type": "boolean",
            "example": false
          },
          "dnd": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "phone": {
            "type": "string",
            "example": "+18832327657"
          },
          "address1": {
            "type": "string",
            "example": "3535 1st St N"
          },
          "city": {
            "type": "string",
            "example": "ruDolomitebika"
          },
          "state": {
            "type": "string",
            "example": "AL"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "postalCode": {
            "type": "string",
            "example": "35061"
          },
          "website": {
            "type": "string",
            "example": "https://www.tesla.com"
          },
          "source": {
            "type": "string",
            "example": "public api"
          },
          "companyName": {
            "type": "string",
            "example": "DGS VolMAX"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-09-25T00:00:00.000Z"
          },
          "birthMonth": {
            "type": "number",
            "example": 8
          },
          "birthDay": {
            "type": "number",
            "example": 25
          },
          "lastSessionActivityAt": {
            "type": "string",
            "example": "2021-07-16T11:39:30.564Z"
          },
          "offers": {
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "products": {
            "example": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "businessId": {
            "type": "string",
            "example": "641c094001436dbc2081e642"
          },
          "assignedTo": {
            "type": "string",
            "example": "y0BeYjuRIlDwsDcOHOJo",
            "description": "User's Id"
          }
        }
      },
      "CreateContactsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/CreateContactSchema"
          }
        }
      },
      "UpdateContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "rosan",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "example": "Deo",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "rosan Deo",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "rosan@deos.com",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "+1 888-888-8888",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "example": "3535 1st St N",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Dolomite",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "AL",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "example": "35061"
          },
          "website": {
            "type": "string",
            "example": "https://www.tesla.com",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "example": "America/Chihuahua",
            "nullable": true
          },
          "dnd": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "inboundDndSettings": {
            "$ref": "#/components/schemas/InboundDndSettingsSchema"
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "description": "This field will overwrite all current tags associated with the contact. To update a tags, it is recommended to use the Add Tag or Remove Tag API instead.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextField"
                },
                {
                  "$ref": "#/components/schemas/LargeTextField"
                },
                {
                  "$ref": "#/components/schemas/SingleSelectField"
                },
                {
                  "$ref": "#/components/schemas/RadioField"
                },
                {
                  "$ref": "#/components/schemas/NumericField"
                },
                {
                  "$ref": "#/components/schemas/MonetoryField"
                },
                {
                  "$ref": "#/components/schemas/CheckboxField"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectField"
                },
                {
                  "$ref": "#/components/schemas/FileField"
                }
              ]
            }
          },
          "source": {
            "type": "string",
            "example": "public api",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "assignedTo": {
            "type": "string",
            "example": "y0BeYjuRIlDwsDcOHOJo",
            "description": "User's Id",
            "nullable": true
          }
        }
      },
      "UpdateContactsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          },
          "contact": {
            "$ref": "#/components/schemas/GetContectByIdSchema"
          }
        }
      },
      "UpsertContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Rosan",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "example": "Deo",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "Rosan Deo",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "rosan@deos.com",
            "nullable": true
          },
          "locationId": {
            "type": "string",
            "example": "ve9EPM428h8vShlRW1KT"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "phone": {
            "type": "string",
            "example": "+1 888-888-8888",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "example": "3535 1st St N",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Dolomite",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "AL",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "example": "35061"
          },
          "website": {
            "type": "string",
            "example": "https://www.tesla.com",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "example": "America/Chihuahua",
            "nullable": true
          },
          "dnd": {
            "type": "boolean",
            "example": true
          },
          "dndSettings": {
            "$ref": "#/components/schemas/DndSettingsSchema"
          },
          "inboundDndSettings": {
            "$ref": "#/components/schemas/InboundDndSettingsSchema"
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "description": "This field will overwrite all current tags associated with the contact. To update a tags, it is recommended to use the Add Tag or Remove Tag API instead.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TextField"
                },
                {
                  "$ref": "#/components/schemas/LargeTextField"
                },
                {
                  "$ref": "#/components/schemas/SingleSelectField"
                },
                {
                  "$ref": "#/components/schemas/RadioField"
                },
                {
                  "$ref": "#/components/schemas/NumericField"
                },
                {
                  "$ref": "#/components/schemas/MonetoryField"
                },
                {
                  "$ref": "#/components/schemas/CheckboxField"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectField"
                },
                {
                  "$ref": "#/components/schemas/FileField"
                }
              ]
            }
          },
          "source": {
            "type": "string",
            "example": "public api"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "companyName": {
            "type": "string",
            "example": "DGS VolMAX",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "example": "y0BeYjuRIlDwsDcOHOJo",
            "description": "User's Id"
          }
        },
        "required": [
          "locationId"
        ]
      },
      "UpsertContactsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "new": {
            "type": "boolean",
            "example": true
          },
          "contact": {
            "$ref": "#/components/schemas/GetContectByIdSchema"
          },
          "traceId": {
            "type": "string"
          }
        }
      },
      "DeleteContactsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ContactsSearchSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ocQHyuzHvysMo5N5VsXc"
          },
          "locationId": {
            "type": "string",
            "example": "C2QujeCh8ZnC7al2InWR"
          },
          "email": {
            "type": "string",
            "example": "JohnDeo@gmail.com"
          },
          "timezone": {
            "type": "string",
            "example": "Asia/Calcutta"
          },
          "country": {
            "type": "string",
            "example": "DE"
          },
          "source": {
            "type": "string",
            "example": "xyz form"
          },
          "dateAdded": {
            "type": "string",
            "example": "2020-10-29T09:31:30.255Z"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldSchema"
            }
          },
          "tags": {
            "example": [
              "nisi sint commodo amet",
              "consequat"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "businessId": {
            "type": "string",
            "example": "641c094001436dbc2081e642"
          },
          "attributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributionSource"
            }
          },
          "followers": {
            "example": "641c094001436dbc2081e642",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ContactsMetaSchema": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 50
          },
          "nextPageUrl": {
            "type": "string",
            "example": "http://localhost:5058/contacts/?locationId=ve9EPM428h8vShlRW1KT&startAfter=1631087949919&startAfterId=yd0jdjOavGk2o6Nh5Ndb"
          },
          "startAfterId": {
            "type": "string",
            "example": "yd0jdjOavGk2o6Nh5Ndb"
          },
          "startAfter": {
            "type": "number",
            "example": 1631087949919
          },
          "currentPage": {
            "type": "number",
            "example": 2
          },
          "nextPage": {
            "type": "number",
            "example": 3
          },
          "prevPage": {
            "type": "number",
            "example": 1,
            "nullable": true
          }
        }
      },
      "ContactsSearchSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactsSearchSchema"
            }
          },
          "count": {
            "type": "number",
            "example": 10
          }
        }
      },
      "FollowersDTO": {
        "type": "object",
        "properties": {
          "followers": {
            "example": [
              "sx6wyHhbFdRXh302Lunr",
              "sx6wyHhbFdRXh302Lunr"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "followers"
        ]
      },
      "CreateAddFollowersSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "followers": {
            "example": [
              "sx6wyHhbFdRXh302Lunr",
              "sx6wyHhbFdRXh302LLss"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "followersAdded": {
            "example": [
              "Mx6wyHhbFdRXh302Luer",
              "Ka6wyHhbFdRXh302LLsAm"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeleteFollowersSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "followers": {
            "example": [
              "sx6wyHhbFdRXh302Lunr",
              "sx6wyHhbFdRXh302LLss"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "followersRemoved": {
            "example": [
              "Mx6wyHhbFdRXh302Luer",
              "Ka6wyHhbFdRXh302LLsAm"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddContactToCampaignDto": {
        "type": "object",
        "properties": {}
      },
      "CreateDeleteCantactsCampaignsSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "CreateWorkflowDto": {
        "type": "object",
        "properties": {
          "eventStartTime": {
            "type": "string",
            "example": "2021-06-23T03:30:00+01:00"
          }
        }
      },
      "ContactsWorkflowSuccessfulResponseDto": {
        "type": "object",
        "properties": {
          "succeded": {
            "type": "boolean",
            "example": true
          }
        }
      }
    }
  },
  "x-tagGroups": {
    "name": "Contacts",
    "tags": [
      "Contacts",
      "Tasks",
      "Appointments",
      "Tags",
      "Notes",
      "Campaigns",
      "Workflow",
      "Bulk",
      "Search",
      "Followers"
    ]
  }
}