name: API Documentation Issue Processing

on:
  issues:
    types: [opened]  # Only trigger on new issues
  workflow_dispatch:  # Keep manual trigger for testing
    inputs:
      issue_number:
        description: 'Issue number to process (must be a valid issue number)'
        required: false
        type: string

# Add concurrency to prevent race conditions
concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.event.inputs.issue_number || github.sha }}
  cancel-in-progress: true

jobs:
  process-issue:
    name: Process API Documentation Issue
    runs-on: ubuntu-latest
    # Only run on the API docs repository and non-internal issues
    if: |
      github.repository == 'GoHighLevel/highlevel-api-docs' &&
      (github.event_name == 'workflow_dispatch' || !contains(github.event.issue.labels.*.name, 'internal'))
    
    permissions:
      issues: write  # Required for issue labeling and commenting
      contents: read # Required for checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install axios
        run: npm install axios

      - name: Process Issue and Create ClickUp Task
        id: process
        uses: actions/github-script@v7
        env:
          CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
          ONCALL_AUTH_TOKEN: ${{ secrets.ONCALL_AUTH_TOKEN }}
          ONCALL_SERVICE_URL: ${{ secrets.ONCALL_SERVICE_URL }}
          ONCALL_API_VERSION: ${{ secrets.ONCALL_API_VERSION }}
        with:
          debug: true  # Enable debug mode for better error logging
          script: |
            try {
              const processIssue = require('./.github/process-issue.js');
              await processIssue(github, context, core);
            } catch (error) {
              core.setFailed(error.message);
              throw error;
            } 